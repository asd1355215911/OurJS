var apiData = {"components.TabPanel.prototype.activeIndex":{"requires":[],"parameters":[],"isStatic":false,"description":"获取当前被激活的“标签面板”的索引，如果为 NaN，则当前无激活的“标签面板”。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"components.TabPanel.prototype.activeIndex"},"Element.prototype.getPrevious":{"requires":[],"parameters":[],"isStatic":false,"description":"获取上一个相邻元素。","isConstructor":false,"returns":[{"type":"Element","description":"上一个相邻元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getPrevious"},"Number.isNaN":{"requires":[],"parameters":[{"description":"要检查的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为非数字。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isnan"],"fires":[],"deprecated":"","examples":["  isNaN(undefined);\r  // true\r  Number.isNaN(undefined);\r  // false"],"isFunction":true,"name":"Number.isNaN"},"RegExp.escape":{"requires":[],"parameters":[{"description":"要编码的字符串。","type":"string","name":"string","isOptional":false}],"isStatic":true,"description":"为字符串编码，避免创建正则表达式时破坏预期的结构。","isConstructor":false,"returns":[{"type":"string","description":"编码后的字符串。"}],"type":"string","since":"","see":["http://prototypejs.org/"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"RegExp.escape"},"Element.prototype.replace":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false},{"description":"是否保留目标元素及其子元素上绑定的所有事件监听器。","type":"boolean","name":"keepListeners","isOptional":true}],"isStatic":false,"description":"替换目标元素。","isConstructor":false,"returns":[{"type":"Element","description":"目标元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.replace"},"Object":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object"},"Global":{"requires":[],"parameters":[],"isStatic":true,"description":"全局对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Global"},"Event.prototype.preventDefault":{"requires":[],"parameters":[],"isStatic":false,"description":"阻止事件的默认行为。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.preventDefault"},"window.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":true,"description":"触发 window 的某类事件，运行相关的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.fire"},"Event.prototype.pageX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在页面中的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.pageX"},"Event.prototype.pageY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在页面中的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.pageY"},"Element.prototype.setStyle":{"requires":[],"parameters":[{"description":"特性名，支持 camel case 和 hyphenate 格式。","type":"string","name":"propertyName","isOptional":false},{"description":"特性值，若为数字，则为期望长度单位的特性值自动添加长度单位 'px'。","type":"number|string","name":"propertyValue","isOptional":false}],"isStatic":false,"description":"设置一条元素的行内样式声明。<br>注意：<br>如果设置的是长度值，若长度单位不是 'px' 则不能省略长度单位。<br>可以设置复合属性的值。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setStyle"},"Element.prototype.find":{"requires":[],"parameters":[{"description":"选择符。","type":"string","name":"selector","isOptional":false}],"isStatic":false,"description":"在当前元素的后代元素中，根据指定的选择符查找元素。<br>本功能使用 Sizzle 实现，关于可以使用的 selector 信息，请参考 Sizzle 的相关说明。","isConstructor":false,"returns":[{"type":"Array","description":"包含查找到的元素的数组。"}],"type":"Array","since":"","see":["https://github.com/jquery/sizzle/wiki/Sizzle-Home"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.find"},"Boolean.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将布尔值转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Boolean.prototype.toJSON"},"localStorage.removeItem":{"requires":[],"parameters":[{"description":"要删除的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false}],"isStatic":true,"description":"删除数据。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.removeItem"},"Number.isFinite":{"requires":[],"parameters":[{"description":"要检查的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为有限的数字。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isfinite"],"fires":[],"deprecated":"","examples":["  isFinite(null);\r  // true\r  Number.isFinite(null);\r  // false"],"isFunction":true,"name":"Number.isFinite"},"components.Switcher":{"requires":[],"parameters":[{"description":"指定在本数组中的各元素间切换，本数组包含的元素必须是引用类型的值，且不能有重复。","type":"Array","name":"items","isOptional":false}],"isStatic":true,"description":"使用一个数组创建切换控制器。在这个数组中，同一时刻最多只有一个元素是“活动”的。<br>高级应用：动态修改实例对象的 items 属性的内容，可以随时增加/减少切换控制器的控制范围。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[{"description":"在当前的活动元素改变时触发。<br><table><tr><th>事件对象的属性</th><th>描述</th></tr><tr><td>activeItem</td><td>当前的活动元素。</td></tr><tr><td>activeIndex</td><td>当前的活动元素在 items 中的索引。</td></tr><tr><td>inactiveItem</td><td>上一个活动元素。</td></tr><tr><td>inactiveIndex</td><td>上一个活动元素在 items 中的索引。</td></tr></table>","name":"activeitemchange"}],"deprecated":"","examples":[],"isFunction":true,"name":"components.Switcher"},"window.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"根据名称删除 window 上已添加的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.off"},"components.Switcher.prototype.getActiveIndex":{"requires":[],"parameters":[],"isStatic":false,"description":"获取当前标记为“活动”的元素的索引。","isConstructor":false,"returns":[{"type":"number","description":"当前标记为“活动”的元素的索引，如果为 NaN，则当前无活动元素。"}],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Switcher.prototype.getActiveIndex"},"Element.prototype.hasClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"判断元素是否有指定的类名。","isConstructor":false,"returns":[{"type":"boolean","description":"调用本方法的元素是否有指定的类名。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.hasClass"},"Element.prototype.contains":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false}],"isStatic":false,"description":"判断元素是否包含另一个元素。<br>注意，如果本元素和目标元素一致，本方法也将返回 true。","isConstructor":false,"returns":[{"type":"boolean","description":"判断结果。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.contains"},"Global.execScript":{"requires":[],"parameters":[{"description":"要执行的代码。","type":"string","name":"code","isOptional":false}],"isStatic":true,"description":"将字符串作为脚本执行，执行时的作用域为全局作用域。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":["  var a;\r  execScript('a = 128 * 2 + 256;');\r  a;\r  // 512"],"isFunction":true,"name":"Global.execScript"},"navigator.isIE6":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE6。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE6"},"components.Dialog.prototype.open":{"requires":[],"parameters":[],"isStatic":false,"description":"打开对话框。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Dialog.prototype.open"},"navigator.isIE7":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE7。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE7"},"Element.prototype.getNext":{"requires":[],"parameters":[],"isStatic":false,"description":"获取下一个相邻元素。","isConstructor":false,"returns":[{"type":"Element","description":"下一个相邻元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getNext"},"navigator.isIE8":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE8。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE8"},"navigator.isIE9":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE9。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE9"},"RegExp":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"RegExp"},"document.$":{"requires":[],"parameters":[{"description":"不同类型的元素表示。","type":"string|Element","name":"e","isOptional":false}],"isStatic":true,"description":"根据指定的参数获取/创建一个元素，并对其进行扩展。<br>当参数为一个元素的序列化之后的字符串（它可以包含子元素）时，会返回扩展后的、根据这个字符串反序列化的元素。<br>这里与其他实现相比有以下几点差异：<br><ul><li>忽略“IE 丢失源代码前的空格”的问题，通过脚本修复这个问题无实际意义（需要深度遍历）。</li><li>修改“IE 添加多余的 tbody 元素”的问题的解决方案，在 wrappers 里预置一个 tbody 即可。</li><li>忽略“脚本不会在动态创建并插入文档树后自动执行”的问题，因为这个处理需要封装 appendChild 等方法，并且还需要考虑脚本的 defer 属性在各浏览器的差异（IE 中添加 defer 属性的脚本在插入文档树后会执行），对于动态载入外部脚本文件的需求，会提供专门的方法，不应该使用本方法。</li></ul>在创建元素时，如果包含 table，建议写上 tbody 以确保结构严谨。举例如下：<br>$('&lt;div&gt;&lt;table&gt;&lt;tbody id=\"ranking\"&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;');<br>当参数为一个元素的 id 时，会返回扩展后的、与指定 id 相匹配的元素。<br>当参数本身即为一个元素时，会返回扩展后的该元素。<br>当参数为其他情况时（包括 document 和 window）均返回 null。","isConstructor":false,"returns":[{"type":"Element","description":"扩展后的元素。"}],"type":"Element","since":"","see":["http://jquery.com/","http://mootools.net/","http://w3help.org/zh-cn/causes/SD9003"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.$"},"components.TabPanel.prototype.active":{"requires":[],"parameters":[{"description":"要激活的“标签面板”的索引。<br>如果指定的索引值不在有效范围内，则取消激活的“标签面板”。","type":"number","name":"index","isOptional":false}],"isStatic":false,"description":"激活一组“标签面板”。","isConstructor":false,"returns":[{"type":"Object","description":"TabPanel 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.TabPanel.prototype.active"},"localStorage":{"requires":[],"parameters":[],"isStatic":true,"description":"为不支持 localStorage 的浏览器提供类似的功能。<br>注意：<br>在不支持 localStorage 的浏览器中，会使用路径 '/favicon.ico' 来创建启用 userData 的元素。<br>当上述路径不存在时 (404)，服务端应避免返回包含脚本的页面，以免出现预料外的异常。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"localStorage"},"Global.typeOf":{"requires":[],"parameters":[{"description":"要判断的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"判断提供的值的数据类型，比 typeof 运算符返回的结果更明确（将对结果为 'object' 的情况进行更细致的区分）。<br>注意：<br>一些特殊的对象，如 IE7 IE8 中的 XMLHttpRequest，是作为构造函数使用的，但使用本方法将得到 'object.Object' 的结果。考虑到需要判断这类对象的情况极为少见，因此未作处理。<br>IE6 IE7 IE8 中在试图访问某些对象提供的属性/方法时，如 new ActiveXObject('Microsoft.XMLHTTP').abort，将抛出“对象不支持此属性或方法”的异常，因此也无法使用本方法对其进行判断。但可以对其使用 typeof 运算符并得到结果 'unknown'。","isConstructor":false,"returns":[{"type":"string","description":"值的类型，可能为以下几种情况之一：<br>undefined<br>boolean<br>number<br>string<br>function<br>null<br>object.Boolean<br>object.Number<br>object.String<br>object.Array<br>object.Date<br>object.RegExp<br>object.Error<br>object.Math<br>object.JSON<br>object.Arguments<br>object.Global<br>object.Node<br>object.Collection<br>object.Object"}],"type":"string","since":"","see":["http://mootools.net/","http://jquery.com/"],"fires":[],"deprecated":"","examples":["  typeOf(document);\r  // 'object.Node'"],"isFunction":true,"name":"Global.typeOf"},"Element.prototype.setData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false},{"description":"数据的值，必须为字符串。","type":"string","name":"value","isOptional":false}],"isStatic":false,"description":"设置元素附加的自定义数据。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setData"},"Event.prototype.isMouseEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"是否为鼠标事件。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isMouseEvent"},"Element.prototype.getChildren":{"requires":[],"parameters":[],"isStatic":false,"description":"获取所有子元素。","isConstructor":false,"returns":[{"type":"Array","description":"包含所有子元素的数组，数组内各元素的顺序为执行本方法时各元素在文档树中的顺序。"}],"type":"Array","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getChildren"},"Event.prototype.offsetX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在横向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.offsetX"},"Event.prototype.timeStamp":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生的时间。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.timeStamp"},"Element.prototype.putAfter":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false}],"isStatic":false,"description":"将元素放到目标元素之后。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.putAfter"},"Event.prototype.offsetY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在纵向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.offsetY"},"Element.prototype.addClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为元素添加一个类名。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.addClass"},"Event.prototype.target":{"requires":[],"parameters":[],"isStatic":false,"description":"触发事件的对象。","isConstructor":false,"returns":[],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.target"},"localStorage.setItem":{"requires":[],"parameters":[{"description":"要保存的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false},{"description":"要保存的数据值。","type":"string","name":"value","isOptional":false}],"isStatic":true,"description":"保存数据。<br>注意：<br>与源生的 localStorage 不同，IE6 IE7 的实现不允许 `~!@#$%^&*() 等符号出现在 key 中，可以使用 . 和 _ 符号，但不能以 . 和数字开头。<br>可以使用中文 key。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.setItem"},"Event.prototype.isKeyboardEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"是否为键盘事件。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isKeyboardEvent"},"Global.getNamespace":{"requires":[],"parameters":[{"description":"命名空间的字符串形式。","type":"string","name":"namespace","isOptional":false}],"isStatic":true,"description":"获取一个命名空间，如果该命名空间不存在，将创建并返回这个命名空间。","isConstructor":false,"returns":[{"type":"Object","description":"命名空间对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["  var finale = getNamespace('data.championship.finale');\r  finale.getRankingList = function() {...};"],"isFunction":true,"name":"Global.getNamespace"},"Element":{"requires":[],"parameters":[],"isStatic":true,"description":"为无 Element 构造函数的浏览器创建 Element 对象，以确保在各浏览器中都可以通过 Element.prototype 为元素扩展新特性。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element"},"String":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"String"},"localStorage.clear":{"requires":[],"parameters":[],"isStatic":true,"description":"清空所有数据。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.clear"},"Element.prototype.fadeOut":{"requires":[],"parameters":[{"description":"动画选项，请参考 Element.prototype.animate 的 options 参数。","type":"Object","name":"options","isOptional":true}],"isStatic":false,"description":"让元素渐隐。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fadeOut"},"navigator.inStandardsMode":{"requires":[],"parameters":[],"isStatic":true,"description":"是否工作在标准模式下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.inStandardsMode"},"components.Dialog.prototype.close":{"requires":[],"parameters":[],"isStatic":false,"description":"关闭对话框。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Dialog.prototype.close"},"Date":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Date"},"Animation.prototype.stop":{"requires":[],"parameters":[],"isStatic":false,"description":"停止动画。","isConstructor":false,"returns":[{"type":"Object","description":"animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.stop"},"window":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 DOMWindow 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"window"},"Array.from":{"requires":[],"parameters":[{"description":"要转化为数组的对象。","type":"*","name":"arrayish","isOptional":false}],"isStatic":true,"description":"将类数组对象转化为数组，如果该对象不是一个类数组对象，则返回一个仅包含该对象的数组。","isConstructor":false,"returns":[{"type":"Array","description":"转化后的数组。"}],"type":"Array","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Array.from"},"Boolean":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Boolean"},"Number.isInteger":{"requires":[],"parameters":[{"description":"要检查的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"检查提供的值是否为整数。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isinteger"],"fires":[],"deprecated":"","examples":["  Number.isInteger(9007199254740992);\r  // false"],"isFunction":true,"name":"Number.isInteger"},"String.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将字符串转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"String.prototype.toJSON"},"Element.prototype.removeData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"删除元素附加的自定义数据。<br>注意：<br>IE6 IE7 在 removeAttribute 时，name 参数是大小写敏感的。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.removeData"},"window.getClientSize":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口可视区域的尺寸。<br>IE9 Firefox Chrome Safari Opera 有 window.innerWidth 和 window.innerHeight 属性，但这个值是包含了滚动条宽度的值。<br>为保持一致性，不使用这两个属性来获取文档可视区域尺寸。","isConstructor":false,"returns":[{"type":"Object","description":"尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":["http://www.w3.org/TR/cssom-view/#dom-window-innerwidth","http://www.w3.org/TR/cssom-view/#dom-window-innerheight"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getClientSize"},"Math":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Math"},"Math.limit":{"requires":[],"parameters":[{"description":"输入的数字。","type":"number","name":"number","isOptional":false},{"description":"允许的数字下限。","type":"number","name":"min","isOptional":false},{"description":"允许的数字上限。","type":"number","name":"max","isOptional":false}],"isStatic":true,"description":"将输入数字限制于 min 和 max 之间（包含 min 和 max）。","isConstructor":false,"returns":[{"type":"number","description":"输出的数字。"}],"type":"number","since":"","see":["http://mootools.net/"],"fires":[],"deprecated":"","examples":["  Math.limit(100, 0, 80);\r  // 80"],"isFunction":true,"name":"Math.limit"},"Math.randomRange":{"requires":[],"parameters":[{"description":"要获取的随机数的下限，整数。","type":"number","name":"min","isOptional":false},{"description":"要获取的随机数的上限，整数。","type":"number","name":"max","isOptional":false}],"isStatic":true,"description":"生成介于 min 和 max 之间（包含 min 和 max）的伪随机整数。","isConstructor":false,"returns":[{"type":"number","description":"生成的伪随机整数。"}],"type":"number","since":"","see":["http://mootools.net/"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Math.randomRange"},"Request":{"requires":[],"parameters":[{"description":"请求地址。","type":"string","name":"url","isOptional":false},{"description":"可选参数，这些参数的默认值保存在 Request.options 中。","type":"Object","name":"options","isOptional":true},{"description":"用户名。","type":"string","name":"options.username","isOptional":false},{"description":"密码。","type":"string","name":"options.password","isOptional":false},{"description":"请求方法，默认为 'post'。","type":"string","name":"options.method","isOptional":false},{"description":"要设置的 request headers，格式为 {key: value, ...} 的对象。","type":"Object","name":"options.headers","isOptional":false},{"description":"发送数据的内容类型，默认为 'application/x-www-form-urlencoded'，method 为 'post' 时有效。","type":"string","name":"options.contentType","isOptional":false},{"description":"是否允许浏览器的缓存生效，默认为 true。","type":"boolean","name":"options.useCache","isOptional":false},{"description":"是否使用异步方式，默认为 true。","type":"boolean","name":"options.async","isOptional":false},{"description":"请求最短时间，单位为 ms，默认为 NaN，即无最短时间限制，async 为 true 时有效。","type":"number","name":"options.minTime","isOptional":false},{"description":"请求超时时间，单位为 ms，默认为 NaN，即无超时时间限制，async 为 true 时有效。","type":"number","name":"options.maxTime","isOptional":false},{"description":"发送请求前触发，传入请求数据，需要返回处理后的字符串数据，当返回 false 时则取消本次请求。","type":"Function","name":"options.onBeforeRequest","isOptional":false},{"description":"收到响应前触发，传入响应数据，需要返回处理后的响应数据。","type":"Function","name":"options.onBeforeResponse","isOptional":false},{"description":"收到响应时触发，参数为包含响应信息的一个对象。","type":"Function","name":"options.onResponse","isOptional":false}],"isStatic":true,"description":"创建一个请求对象，用来对一个指定的资源发起请求，并在获取响应后进行处理。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Request"},"components.TabPanel":{"requires":["components.Switcher"],"parameters":[{"description":"包含所有“标签”的数组。","type":"Array","name":"tabs","isOptional":false},{"description":"包含所有“面板”的数组，应确保 panels 的数量和 tabs 的数量一致。","type":"Array","name":"panels","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"从 tabs 和 panels 中计算的，默认激活的某组“标签面板”的索引值。第一组为 0，默认为第一组。如果指定的索引值不在有效范围内，则无默认激活的“标签面板”。","type":"number","name":"options.defaultActiveIndex","isOptional":false},{"description":"为激活的“标签”和“面板”添加的类名，默认为 'active'。同一时刻最多只有一组“标签面板”被激活。","type":"string","name":"options.activeClassName","isOptional":false},{"description":"用来绑定各“标签”的代理事件监听器的元素。当所有的“标签”有一个共同的父元素时，可以设置为 undefined，此时使用第一个“标签”的父元素。","type":"Element","name":"options.tabsContainer","isOptional":false},{"description":"以毫秒为单位的鼠标悬停激活延时，如果为 0，则由鼠标点击事件激活。若要启用鼠标悬停激活，建议设置为 200 - 400 之间的数值。","type":"number","name":"options.hoverDelay","isOptional":false},{"description":"当一组“标签面板”被激活时触发，传入当前被激活的“标签面板”的“标签”元素和该组“标签面板”的索引。","type":"Function","name":"options.onActive","isOptional":false},{"description":"当一组“标签面板”被激活时触发，传入上一个被激活的“标签面板”的“标签”元素和该组“标签面板”的索引，在 TabPanel 初始化时没有上一个被激活的“标签面板”，因此不会触发。","type":"Function","name":"options.onInactive","isOptional":false}],"isStatic":true,"description":"根据已有的一系列 DOM 元素创建多页标签面板。<br>注意：<br>“标签”和“面板”必须是按顺序一一对应，保存在参数 tabs 和 panels 中。<br>一个“标签”和一个“面板”组成一组“标签面板”。<br>在创建一个实例后，可以动态修改 tabPanel.tabs 和 tabPanel.panels，动态添加/删除“标签面板”组，但要确保新增加的“标签”与原有“标签”的在 DOM 树的位置层次是相同的。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.TabPanel"},"Request.prototype.send":{"requires":[],"parameters":[{"description":"要发送的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":false,"description":"发送请求。","isConstructor":false,"returns":[{"type":"Object","description":"request 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Request.prototype.send"},"location":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 location 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"location"},"Element.prototype.getStyles":{"requires":[],"parameters":[{"description":"指定要获取的特性名，可以为任意个。","type":"Array","name":"propertyNames","isOptional":false}],"isStatic":false,"description":"获取元素的“计算后的样式”中一组特性的值。","isConstructor":false,"returns":[{"type":"Object","description":"包含一组特性值的，格式为 {propertyName: propertyValue, ...} 的对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getStyles"},"Event.prototype.isPropagationStopped":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的传递是否已被阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isPropagationStopped"},"Element.prototype.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。<br>data 的属性会被追加到事件对象中，但名称为 originalEvent 的属性除外。","type":"Object","name":"data","isOptional":true}],"isStatic":false,"description":"触发一个元素的某类事件，运行相关的监听器。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fire"},"cookie.get":{"requires":[],"parameters":[{"description":"要读取的 cookie 名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"读取 cookie。","isConstructor":false,"returns":[{"type":"string","description":"对应的值。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.get"},"Element.prototype.setStyles":{"requires":[],"parameters":[{"description":"包含一条或多条要设置的样式声明，格式为 {propertyName: propertyValue, ...} 的对象。","type":"Object","name":"declarations","isOptional":false}],"isStatic":false,"description":"设置一组元素的行内样式声明。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.setStyles"},"Element.prototype.getParent":{"requires":[],"parameters":[],"isStatic":false,"description":"获取父元素。","isConstructor":false,"returns":[{"type":"Element","description":"父元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getParent"},"Event.prototype.stopPropagation":{"requires":[],"parameters":[],"isStatic":false,"description":"阻止事件的传递，被阻止传递的事件将不会向其他元素传递。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.stopPropagation"},"Event.prototype.which":{"requires":[],"parameters":[],"isStatic":false,"description":"当一个设备触发事件时的相关代码。在键盘事件中为按下的键的代码。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.which"},"Event.prototype.shiftKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，shift 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.shiftKey"},"Element.prototype.stopAnimate":{"requires":[],"parameters":[{"description":"队列名。","type":"string","name":"queueName","isOptional":true}],"isStatic":false,"description":"停止播放指定的动画队列。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.stopAnimate"},"Element.prototype.on":{"requires":[],"parameters":[{"description":"事件名称，包括事件类型和可选的别名，二者间用 . 分割。可以同时为多个事件注册同一个监听器（或对相同的子元素代理事件），使用空格分割要多个事件名称即可。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的子元素代理事件。但要注意的是，在代理事件监听器中调用 e.stopPropagation 或 e.stopImmediatePropagation 时，事件对象实际上已经从触发对象传递到监听对象了。","type":"Function","name":"filter","isOptional":true}],"isStatic":false,"description":"为元素添加监听器。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":["http://www.quirksmode.org/dom/events/index.html"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.on"},"String.prototype.contains":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否包含指定的子串。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["  'abcdefg'.contains('cd');\r  // true"],"isFunction":true,"name":"String.prototype.contains"},"Object.forEach":{"requires":[],"parameters":[{"description":"要遍历的对象。","type":"Object","name":"object","isOptional":false},{"description":"用来遍历的函数，参数为 value，key，object。","type":"Function","name":"callback","isOptional":false},{"description":"遍历函数的 this 值。","type":"Object","name":"thisObj","isOptional":true}],"isStatic":true,"description":"遍历一个对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object.forEach"},"Element.prototype.putBefore":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false}],"isStatic":false,"description":"将元素放到目标元素之前。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.putBefore"},"Event.prototype.isDefaultPrevented":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的默认行为是否已被阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isDefaultPrevented"},"Element.prototype.getAnimationQueue":{"requires":[],"parameters":[{"description":"队列名。","type":"string","name":"queueName","isOptional":true}],"isStatic":false,"description":"获取指定的动画队列，队里中仅包含尚未播放的动画效果。如果队列为空，将返回 null。<br>可以通过此方法判断指定的动画队列是否正在播放。返回数组即正在播放，数组的 currentAnimation 属性为播放中的动画，数组中的内容为排队的动画。<br>可以通过操作这个队列改变动画的播放行为。<br>队列格式：[Element element, Object styles, Object options]","isConstructor":false,"returns":[{"type":"Array","description":"指定的动画队列。"}],"type":"Array","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getAnimationQueue"},"navigator.isIE":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIE"},"Global.runApplication":{"requires":[],"parameters":[{"description":"应用函数。","type":"Function","name":"applicationFunction","isOptional":false}],"isStatic":true,"description":"运行应用。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Global.runApplication"},"Event.prototype.altKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，alt 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.altKey"},"Element.prototype.getLastChild":{"requires":[],"parameters":[],"isStatic":false,"description":"获取最后一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"最后一个子元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getLastChild"},"Component":{"requires":[],"parameters":[{"description":"组件构造函数。<br><ul><li>声明 constructor 时，其最后一个形参必须是一个可选参数 options。即便一个组件不需要 options，也应将其写入形参内。</li><li>不要在 constructor 中访问 options 形参，因为此形参并不会被传入 constructor。要访问 options 形参的属性，直接访问实例的同名属性即可。</li><li>必须指定 constructor.options，以代表默认选项。即便一个组件不需要默认选项，也应将 constructor.options 设置为空对象。</li><li>constructor、constructor.options、constructor.prototype 内均不能设置实例的 events/on/off/fire 属性。</li></ul>","type":"Function","name":"constructor","isOptional":false}],"isStatic":true,"description":"创建一个组件。<br>本方法本质是包装 constructor，以加入对事件的支持，并能自动处理默认选项和指定选项。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component"},"components.Switcher.prototype.active":{"requires":[],"parameters":[{"description":"要标记为“活动”的元素，或者这个元素在 items 中的索引值。<br>要标记为“活动”的元素不能为当前的活动元素。<br>如果指定的值为不在 items 中的对象，或为一个不在有效范索引围内的数字，则取消活动元素。","type":"Object|number","name":"i","isOptional":false}],"isStatic":false,"description":"将一个元素标记为“活动”。如果之前有活动元素，则同时取消该元素的“活动”状态。","isConstructor":false,"returns":[{"type":"Object","description":"Switcher 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Switcher.prototype.active"},"String.prototype.repeat":{"requires":[],"parameters":[{"description":"要重复的次数。","type":"number","name":"count","isOptional":false}],"isStatic":false,"description":"将字符串重复指定的次数。","isConstructor":false,"returns":[{"type":"string","description":"重复指定次数后的字符串。"}],"type":"string","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string.prototype.repeat"],"fires":[],"deprecated":"","examples":["  '*'.repeat(5);\r  // '*****'"],"isFunction":true,"name":"String.prototype.repeat"},"window.getScrollSize":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口滚动区域的尺寸。当内容不足以充满视口可视区域时，返回视口可视区域的尺寸。","isConstructor":false,"returns":[{"type":"Object","description":"尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getScrollSize"},"Event":{"requires":[],"parameters":[{"description":"原始事件对象。","type":"Object","name":"e","isOptional":false},{"description":"事件类型。","type":"string","name":"type","isOptional":false}],"isStatic":true,"description":"事件包装对象。<br>当事件对象通过调用 Element/document/window 的 fire 方法传递到监听器时，其属性可能会被重写。<br>在一些需要获取浏览器提供的真实事件属性时，可以通过事件对象的 originalEvent.type 属性来辨别事件的真实类型，由上述 fire 方法生成的事件对象的对应属性为空字符串。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event"},"window.on":{"requires":[],"parameters":[{"description":"事件名称。参考 Element.prototype.on 的同名参数。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的子元素代理事件。","type":"Function","name":"filter","isOptional":true}],"isStatic":true,"description":"为 window 添加监听器。<br>特殊事件：beforeunload<br>该事件只能存在一个监听器，如果添加了多个，则只有最后添加的生效。可以删除当前生效的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"window 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.on"},"navigator.userAgentInfo.name":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器名称，值为以下之一：IE|Firefox|Chrome|Safari|Opera。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.name"},"components.Dialog.prototype.adjust":{"requires":[],"parameters":[],"isStatic":false,"description":"调整对话框位置。","isConstructor":false,"returns":[{"type":"Object","description":"Dialog 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Dialog.prototype.adjust"},"cookie.set":{"requires":[],"parameters":[{"description":"要设置的 cookie 名称。","type":"string","name":"name","isOptional":false},{"description":"要设置的 cookie 名称对应的值。","type":"string","name":"value","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"限定生效的路径，默认为当前路径。","type":"string","name":"options.path","isOptional":false},{"description":"限定生效的域名，默认为当前域名。","type":"string","name":"options.domain","isOptional":false},{"description":"是否仅通过 SSL 连接 (HTTPS) 传输 cookie，默认为否。","type":"boolean","name":"options.secure","isOptional":false},{"description":"过期时间。","type":"Date","name":"options.expires","isOptional":false}],"isStatic":true,"description":"设置 cookie。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.set"},"components.Dialog":{"requires":[],"parameters":[{"description":"要作为对话框显示的元素。<br>该元素的 position 将在创建后视情况而被修改为 absolute 或 fixed，另外建议为该元素设置明确的 zIndex。<br>对话框的默认状态为关闭。因此 element 的 display 将被设置为 none。<br>对话框元素将以其父元素（父元素应创建 stacking context）为“参考元素”进行定位，将对话框的中心点固定在该元素的中心点，遮掩层也作为其父元素的子元素被创建。<br>如果 options.pinnedOffsetX 或 options.pinnedOffsetY 被指定，则对话框的中心点在横向或纵向将不再与其父元素的中心点重合。<br>如果以上两个参数被同时指定，则即便 element 是 body 的子元素，在窗口改变尺寸时也不会自动调用 adjust 方法。<br>避免让对话框元素的父元素出现滚动条，以免对话框和遮掩层能随其内容滚动。<br>如果话框元素的父元素未创建 stacking context，将修改其 position 特性为 relative 以使其创建 stacking context。<br>如果话框元素的父元素为 body 元素时，遮掩层将遮掩整个视口。此时如果 element 的 position 为 fixed，对话框将始终保持显示在视口内。<br>当多个对话框有相同的父元素时，则视这些对话框为一组，将对话框分组有助于重叠显示这些对话框。<br>在 IE6 下禁用 open/close 时的渐变效果，以避免和 PNG 透明修复脚本冲突。","type":"Element","name":"element","isOptional":false},{"description":"可选参数，这些参数的默认值保存在 Dialog.options 中。","type":"Object","name":"options","isOptional":true},{"description":"为遮掩层元素附加的属性。","type":"Object","name":"options.maskAttributes","isOptional":false},{"description":"为遮掩层元素设置的样式。","type":"Object","name":"options.maskStyles","isOptional":false},{"description":"对话框的左边与其父元素的左边的横向差值。如果指定，对话框的中心点在横向将不再与其父元素的中心点重合。","type":"number","name":"options.pinnedOffsetX","isOptional":false},{"description":"对话框的顶边与其父元素的顶边的纵向差值。如果指定，对话框的中心点在纵向将不再与其父元素的中心点重合。","type":"number","name":"options.pinnedOffsetY","isOptional":false},{"description":"调用 open 方法时触发。","type":"Function","name":"options.onOpen","isOptional":false},{"description":"调用 close 方法时触发。","type":"Function","name":"options.onClose","isOptional":false}],"isStatic":true,"description":"模态对话框。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Dialog"},"Element.prototype.animate":{"requires":[],"parameters":[{"description":"目标样式，元素将向指定的目标样式过渡。目标样式包含一条或多条要设置的样式声明，具体如下：<br>1. 与 setStyles 的参数一致，格式为 {propertyName: propertyValue, ...} 的对象。<br>2. propertyName 只支持 camel case，并且不能使用复合属性。<br>3. propertyValue 若为数字，则为期望长度单位的特性值自动添加长度单位 'px'。<br>4. lineHeight 仅支持 'px' 单位的长度设置，而不支持数字。","type":"Object","name":"styles","isOptional":false},{"description":"动画选项，与 Animation 的 options 参数基本一致，区别是：<br>1. 增加 onPlay 回调选项。<br>2. onBeforeStart、onStart、onPlay、(TODO: onStop、)onFinish 的 this 均为调用本方法的元素。<br>3. 提供了一个 queueName 属性用来更方便的控制队列。","type":"Object","name":"options","isOptional":true},{"description":"每播放完一帧动画后的回调函数。","type":"Object","name":"options.onPlay","isOptional":false}],"isStatic":false,"description":"在元素的动画队列中添加一个动画效果。<br>队列是指将需要较长时间完成的多个指令排序，以先进先出的形式逐个执行这些指令。<br>在元素上调用本方法添加动画时：<br>- 若该元素并未播放动画，新添加的动画会直接开始播放。<br>- 若该元素正在播放动画，新添加的动画将被添加到队列末端，在前一个动画播放完毕后自动播放。<br>给不同元素添加的动画永远有不同的队列，给相同元素添加的动画默认有相同的队列，但可以通过 options.queueName 来指定新队列的名称。<br>若需要连接不同元素的动画队列，请配合动画参数 options.onFinish 来实现。<br>允许使用的“可过渡样式”仅限于值为长度单位或颜色单位的样式。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.animate"},"Request.prototype.abort":{"requires":[],"parameters":[],"isStatic":false,"description":"取消请求，仅在 Request 设置为异步模式时可用。","isConstructor":false,"returns":[{"type":"Object","description":"request 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Request.prototype.abort"},"Date.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将日期转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Date.prototype.toJSON"},"Element.prototype.getFirstChild":{"requires":[],"parameters":[],"isStatic":false,"description":"获取第一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"第一个子元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getFirstChild"},"components.Switcher.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"components.Switcher.options"},"window.getPageOffset":{"requires":[],"parameters":[],"isStatic":true,"description":"获取视口的滚动偏移量。<br>一些浏览器支持 window.scrollX/window.scrollY 或 window.pageXOffset/window.pageYOffset 直接获取视口的滚动偏移量。<br>这里使用通用性更强的方法实现。","isConstructor":false,"returns":[{"type":"Object","description":"坐标，包含 x 和 y 两个数字类型的属性，单位为像素。"}],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/BX9008"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.getPageOffset"},"Element.prototype.prepend":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false}],"isStatic":false,"description":"将目标元素追加为自己的第一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.prepend"},"Element.prototype.getChildCount":{"requires":[],"parameters":[],"isStatic":false,"description":"获取子元素的总数。","isConstructor":false,"returns":[{"type":"number","description":"子元素的总数。"}],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getChildCount"},"location.parameters":{"requires":[],"parameters":[],"isStatic":true,"description":"获取当前页面的 Query String 中携带的所有参数。<br>注意：<br>当地址栏的字符有非 ASCII 字符，或有非法的查询字符串时，会有兼容性问题。","isConstructor":false,"returns":[],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/HD9001"],"fires":[],"deprecated":"","examples":["  // 设页面地址为 test.html?a=ok&b=100&b=128\r  location.parameters\r  // {a:'ok', b:['100', '128']}"],"isFunction":false,"name":"location.parameters"},"Request.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Request.options"},"Component.prototype.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"事件对象。","type":"Object","name":"event","isOptional":true}],"isStatic":false,"description":"触发一个组件的某类事件，运行相关的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"调用本方法的组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.fire"},"Element.prototype.getClientRect":{"requires":[],"parameters":[],"isStatic":false,"description":"获取元素的 border-box 在视口中的坐标。<br>注意：<br>不考虑非标准模式。<br>标准模式下 IE7(IE9 模拟) 的 body 的计算样式 direction: rtl 时，如果 html 设置了边框，则横向坐标获取仍不准确。由于极少出现这种情况，此处未作处理。","isConstructor":false,"returns":[{"type":"Object","description":"包含位置（left、right、top、bottom）及尺寸（width、height）的对象，所有属性值均为 number 类型，单位为像素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getClientRect"},"Event.prototype.stopImmediatePropagation":{"requires":[],"parameters":[],"isStatic":false,"description":"立即阻止事件的传递，被立即阻止传递的事件不仅不会向其他元素传递，也不会在当前元素上触发其他事件监听器。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Event.prototype.stopImmediatePropagation"},"Object.append":{"requires":[],"parameters":[{"description":"原始对象。","type":"Object","name":"original","isOptional":false},{"description":"追加对象，其 properties 会被复制到 original 中。","type":"Object","name":"appending","isOptional":false},{"description":"过滤要复制的 appending 的 properties 的名单。","type":"Object","name":"filter","isOptional":true},{"description":"仅在 appending 中的 key 包含于 whiteList 时，对应的 property 才会被复制到 original 中。","type":"Array","name":"filter.whiteList","isOptional":false},{"description":"如果 appending 中的 key 包含于 blackList，则对应的 property 不会被复制到 original 中。<br>如果 blackList 与 whiteList 有重复元素，则 whiteList 中的该元素将被忽略。","type":"Array","name":"filter.blackList","isOptional":false}],"isStatic":true,"description":"为一个对象追加另一个对象自身（不包含原型链）的 properties。<br>appending 中的 property 会覆盖 original 中的同名 property。<br><table><tr><th>original (before)</th><th>appending</th><th>original (after)</th></tr><tr><td>a: 'a.0'</td><td></td><td>a: 'a.0'</td></tr><tr><td>b: 'b.0'</td><td>b: 'b.1'</td><td>b: 'b.1'</td></tr><tr><td></td><td>c: 'c.1'</td><td>c: 'c.1'</td></tr></table>","isConstructor":false,"returns":[{"type":"Object","description":"追加后的 original 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["  var original = {a: 'a.0'};\r  var appending = {b: 'b.1'};\r  JSON.stringify(Object.append(original, appending));\r  // {\"a\":\"a.0\",\"b\":\"b.1\"}","  var original = {a: 'a.0', b: 'b.0', c: 'c.0'};\r  var appending = {a: 'a.1', b: 'b.1', c: 'c.1'};\r  JSON.stringify(Object.append(original, appending, {whiteList: ['a', 'b']}));\r  // {\"a\":\"a.1\",\"b\":\"b.1\",\"c\":\"c.0\"}\r  JSON.stringify(Object.append(original, appending, {whiteList: ['a', 'b'], blackList: ['b', 'c']}));\r  // {\"a\":\"a.1\",\"b\":\"b.0\",\"c\":\"c.0\"}"],"isFunction":true,"name":"Object.append"},"Animation.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Animation.options"},"Number":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number"},"Element.prototype.remove":{"requires":[],"parameters":[{"description":"是否保留该元素及其子元素上绑定的所有事件监听器。","type":"boolean","name":"keepListeners","isOptional":true}],"isStatic":false,"description":"将元素从文档树中删除。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.remove"},"Component.prototype.on":{"requires":[],"parameters":[{"description":"事件名称，包括事件类型和可选的别名，二者间用 . 分割。<br>使用空格分割要多个事件名称，即可同时为多个事件注册同一个监听器。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器，传入调用此方法的组件提供的事件对象。","type":"Function","name":"listener","isOptional":false}],"isStatic":false,"description":"为组件添加监听器。","isConstructor":false,"returns":[{"type":"Object","description":"调用本方法的组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.on"},"navigator.userAgentInfo.engine":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器渲染引擎的类型，值为以下之一：Trident|WebKit|Gecko|Presto。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.engine"},"Element.prototype.getStyle":{"requires":[],"parameters":[{"description":"特性名，支持 camel case 和 hyphenate 格式。","type":"string","name":"propertyName","isOptional":false}],"isStatic":false,"description":"获取元素的“计算后的样式”中某个特性的值。<br>注意：<br>不要尝试获取复合属性的值，它们存在兼容性问题。<br>不要尝试获取未插入文档树的元素的“计算后的样式”，它们存在兼容性问题。","isConstructor":false,"returns":[{"type":"string","description":"对应的特性值，如果获取的是长度值，其单位未必是 px，可能是其定义时的单位。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getStyle"},"Element.prototype.append":{"requires":[],"parameters":[{"description":"目标元素。","type":"Element","name":"element","isOptional":false}],"isStatic":false,"description":"将目标元素追加为自己的最后一个子元素。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.append"},"Component.prototype.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"根据名称删除组件上已添加的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"调用本方法的组件。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Component.prototype.off"},"navigator.isSafari":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Safari。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isSafari"},"navigator.userAgentInfo.version":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器的版本号。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo.version"},"Element.prototype.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"根据名称删除元素上已添加的监听器。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.off"},"document.off":{"requires":[],"parameters":[{"description":"通过 on 添加监听器时使用的事件名称。可以使用空格分割多个事件名称。","type":"string","name":"name","isOptional":false}],"isStatic":true,"description":"根据名称删除 document 上已添加的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.off"},"Event.prototype.wheelUp":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标滚轮是否正在向上滚动，仅在 mousewheel 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.wheelUp"},"Event.prototype.type":{"requires":[],"parameters":[],"isStatic":false,"description":"事件类型。","isConstructor":false,"returns":[],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.type"},"navigator.isOpera":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Opera。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isOpera"},"Number.prototype.toJSON":{"requires":[],"parameters":[],"isStatic":false,"description":"将数字转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number.prototype.toJSON"},"String.prototype.endsWith":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否以指定的子串结束。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["  'abcdefg'.endsWith('a');\r  // false"],"isFunction":true,"name":"String.prototype.endsWith"},"String.prototype.toArray":{"requires":[],"parameters":[],"isStatic":false,"description":"将字符串转化为数组。","isConstructor":false,"returns":[{"type":"Array","description":"从字符串转化的数组。"}],"type":"Array","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["  'abcdefg'.toArray();\r  // ['a', 'b', 'c', 'd', 'e', 'f', 'g']"],"isFunction":true,"name":"String.prototype.toArray"},"document.fire":{"requires":[],"parameters":[{"description":"事件类型。","type":"String","name":"type","isOptional":false},{"description":"在事件对象上附加的数据。","type":"Object","name":"data","isOptional":true}],"isStatic":true,"description":"触发 document 的某类事件，运行相关的监听器。","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.fire"},"Event.prototype.isImmediatePropagationStopped":{"requires":[],"parameters":[],"isStatic":false,"description":"事件的传递是否已被立即阻止。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.isImmediatePropagationStopped"},"Object.clone":{"requires":[],"parameters":[{"description":"原始对象。","type":"Object","name":"source","isOptional":false},{"description":"是否进行深克隆。","type":"boolean","name":"recursive","isOptional":true}],"isStatic":true,"description":"克隆一个对象，返回克隆后的新对象。<br>原型链中的 properties 不会被克隆。","isConstructor":false,"returns":[{"type":"Object","description":"克隆后的新对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Object.clone"},"Event.prototype.middleButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标中键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.middleButton"},"window.$":{"requires":[],"parameters":[],"isStatic":true,"description":"将全局作用域的 $ 作为 document.$ 的别名，以便于书写代码。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"window.$"},"Animation.prototype.play":{"requires":[],"parameters":[],"isStatic":false,"description":"播放动画。","isConstructor":false,"returns":[{"type":"Object","description":"animation 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation.prototype.play"},"String.prototype.clean":{"requires":[],"parameters":[],"isStatic":false,"description":"合并字符串中的空白字符，并去掉首尾的空白字符。","isConstructor":false,"returns":[{"type":"string","description":"清理后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":["  ' a b  c   d    e     f      g       '.clean();\r  // 'a b c d e f g'"],"isFunction":true,"name":"String.prototype.clean"},"Global.declareModule":{"requires":[],"parameters":[{"description":"模块 id。","type":"string","name":"id","isOptional":false},{"description":"模块函数。","type":"Function","name":"moduleFunction","isOptional":false}],"isStatic":true,"description":"声明模块。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Global.declareModule"},"components.Dialog.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。<br>可选参数对象，包含的属性及其默认值为：<br><table><tr><th>maskAttributes</th><td>{}</td></tr><tr><th>maskStyles</th><td>{backgroundColor: '#000', opacity: 0.2}</td></tr><tr><th>pinnedOffsetX</th><td>NaN</td></tr><tr><th>pinnedOffsetY</th><td>NaN</td></tr><tr><th>onOpen</th><td>empty</td></tr><tr><th>onClose</th><td>empty</td></tr></table>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"components.Dialog.options"},"Event.prototype.wheelDown":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标滚轮是否正在向下滚动，仅在 mousewheel 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.wheelDown"},"navigator.isFirefox":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Firefox。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isFirefox"},"JSON":{"requires":[],"parameters":[],"isStatic":true,"description":"JSON 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"JSON"},"components.TabPanel.options":{"requires":[],"parameters":[],"isStatic":true,"description":"默认选项。<br>可选参数对象，包含的属性及其默认值为：<br><table><tr><th>defaultActiveIndex</th><td>0</td></tr><tr><th>activeClassName</th><td>'active'</td></tr><tr><th>tabsContainer</th><td>undefined</td></tr><tr><th>hoverDelay</th><td>0</td></tr><tr><th>onActive</th><td>empty</td></tr><tr><th>onInactive</th><td>empty</td></tr></table>","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"components.TabPanel.options"},"document.on":{"requires":[],"parameters":[{"description":"事件名称。参考 Element.prototype.on 的同名参数。","type":"string","name":"name","isOptional":false},{"description":"要添加的事件监听器。","type":"Function","name":"listener","isOptional":false},{"description":"为符合条件的子元素代理事件。","type":"Function","name":"filter","isOptional":true}],"isStatic":true,"description":"为 document 添加监听器。<br>特殊事件：domready<br>在文档可用时触发，只能添加监听器，不能删除监听器。<br>如果在此事件触发后添加此类型的监听器，这个新添加的监听器将立即运行。","isConstructor":false,"returns":[{"type":"Object","description":"document 对象。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.on"},"Array":{"requires":[],"parameters":[],"isStatic":true,"description":"","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Array"},"components.Switcher.prototype.getActiveItem":{"requires":[],"parameters":[],"isStatic":false,"description":"获取当前标记为“活动”的元素。","isConstructor":false,"returns":[{"type":"Object","description":"当前标记为“活动”的元素，如果为 null，则当前无活动元素。"}],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"components.Switcher.prototype.getActiveItem"},"navigator.isChrome":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 Chrome。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isChrome"},"JSON.stringify":{"requires":[],"parameters":[{"description":"要转换的 ECMAScript 值，通常是 Object 或 Array 类型的数据，也可以是 String、Boolean、Number、Date 类型的数据或者 null。","type":"*","name":"value","isOptional":false},{"description":"用来过滤的函数或数组。<br>如果是函数，则传入 key 和 value，并使用其返回值替换 value，若返回 undefined，则忽略该 key。<br>如果是数组，则该数组只能包含字符串，本方法会仅对 key 出现在数组中的部分进行转换。","type":"Function|Array","name":"replacer","isOptional":true},{"description":"为使 JSON 字符串更易读而在每行内容之前加入的前缀。<br>如果是字符串，则直接加入这个字符串作为前缀。若字符串的长度超过 10，则仅保留前 10 个字符。<br>如果是数字，则加入对应数目的空格符。若数字大于 10，则只使用 10 个空格符。<br>如果未指定该值，或者该值为 '' 或 0，则 JSON 字符串不会换行（全部内容在一行内）。","type":"string|number","name":"space","isOptional":true}],"isStatic":true,"description":"将 ECMAScript 值转换为 JSON 格式的字符串。","isConstructor":false,"returns":[{"type":"string","description":"转换后的字符串。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"JSON.stringify"},"Event.prototype.clientX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在视口中的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.clientX"},"Event.prototype.clientY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在视口中的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.clientY"},"Event.prototype.ctrlKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，ctrl 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.ctrlKey"},"Event.prototype.leftButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标左键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.leftButton"},"String.prototype.startsWith":{"requires":[],"parameters":[{"description":"指定的子串。","type":"string","name":"subString","isOptional":false}],"isStatic":false,"description":"检查字符串是否以指定的子串开始。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"fires":[],"deprecated":"","examples":["  'abcdefg'.startsWith('a');\r  // true"],"isFunction":true,"name":"String.prototype.startsWith"},"document.preloadImages":{"requires":[],"parameters":[{"description":"包含需预加载的图片路径的数组。","type":"Array","name":"urlArray","isOptional":false}],"isStatic":true,"description":"预加载图片。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"document.preloadImages"},"cookie.remove":{"requires":[],"parameters":[{"description":"要删除的 cookie 名称。","type":"string","name":"name","isOptional":false},{"description":"可选参数。","type":"Object","name":"options","isOptional":true},{"description":"限定生效的路径，默认为当前路径。","type":"string","name":"options.path","isOptional":false},{"description":"限定生效的域名，默认为当前域名。","type":"string","name":"options.domain","isOptional":false},{"description":"是否仅通过 SSL 连接 (HTTPS) 传输 cookie，默认为否。","type":"boolean","name":"options.secure","isOptional":false}],"isStatic":true,"description":"删除 cookie。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"cookie.remove"},"Element.prototype.fadeIn":{"requires":[],"parameters":[{"description":"动画选项，请参考 Element.prototype.animate 的 options 参数。","type":"Object","name":"options","isOptional":true}],"isStatic":false,"description":"让元素渐显。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.fadeIn"},"Element.prototype.empty":{"requires":[],"parameters":[],"isStatic":false,"description":"将元素的内容清空，并删除其子元素上绑定的所有事件监听器。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.empty"},"Number.prototype.toRegular":{"requires":[],"parameters":[{"description":"数字总位数（包括整数位和小数位），当数字实际位数小于指定的数字总位数时，会在左侧补零。","type":"number","name":"digits","isOptional":false}],"isStatic":false,"description":"在数字左侧补零，以使数字更整齐。","isConstructor":false,"returns":[{"type":"string","description":"补零后的数字、NaN、Infinity 或 -Infinity 的字符形式。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Number.prototype.toRegular"},"Event.prototype.metaKey":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，meta 键是否被按下。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.metaKey"},"Event.prototype.originalEvent":{"requires":[],"parameters":[],"isStatic":false,"description":"原始事件对象。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.originalEvent"},"navigator.userAgentInfo":{"requires":[],"parameters":[],"isStatic":true,"description":"从 navigator.userAgent 中提取的常用信息。<br>注意：<br>navigator.userAgentInfo 下的三个属性是根据 navigator.userAgent 得到的，仅供参考使用，不建议用在代码逻辑判断中。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.userAgentInfo"},"Element.prototype":{"requires":[],"parameters":[],"isStatic":true,"description":"可以通过扩展本对象来为页面中的所有元素扩展新特性。<br>注意：<br>受 IE6 IE7 实现方式的限制，扩展新特性应在获取元素之前进行，否则已获取的元素可能无法访问新扩展的特性。","isConstructor":false,"returns":[],"type":"Object","since":"","see":[],"fires":[],"deprecated":"","examples":["  Element.prototype.getNodeName = function() {\r    return this.nodeName;\r  };\r  $(document.head).getNodeName();\r  // HEAD"],"isFunction":false,"name":"Element.prototype"},"Event.prototype.relatedTarget":{"requires":[],"parameters":[],"isStatic":false,"description":"事件被触发时的相关对象，仅在 mouseover/mouseout 类型的事件对象上有效。","isConstructor":false,"returns":[],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.relatedTarget"},"document":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 document 对象。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"document"},"JSON.parse":{"requires":[],"parameters":[{"description":"要转换的 JSON 格式的字符串。","type":"string","name":"text","isOptional":false},{"description":"用来过滤的函数。传入 key 和 value，将使用其返回值替换 value。","type":"Function","name":"reviver","isOptional":true}],"isStatic":true,"description":"将 JSON 格式的字符串转换为 ECMAScript 值。","isConstructor":false,"returns":[{"type":"*","description":"转换后的 ECMAScript 值。"}],"type":"*","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"JSON.parse"},"Array.prototype.contains":{"requires":[],"parameters":[{"description":"指定的元素。","type":"*","name":"element","isOptional":false}],"isStatic":false,"description":"检查数组中是否包含指定的元素。","isConstructor":false,"returns":[{"type":"boolean","description":"检查结果。"}],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":["  [0, 1, 2, 3, 4].contains(2);\r  // true"],"isFunction":true,"name":"Array.prototype.contains"},"Element.prototype.getData":{"requires":[],"parameters":[{"description":"数据的名称，必须为 camelCase 形式，并且只能包含英文字母。","type":"string","name":"name","isOptional":false}],"isStatic":false,"description":"获取元素附加的自定义数据。<br>注意：<br>Chrome 在 dataset 中不存在名称为 name 的值时，返回空字符串，Firefox Safari Opera 返回 undefined。此处均返回 undefined。","isConstructor":false,"returns":[{"type":"string","description":"数据的值。"}],"type":"string","since":"","see":["http://www.w3.org/TR/2011/WD-html5-20110525/elements.html#embedding-custom-non-visible-data-with-the-data-attributes"],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.getData"},"Element.prototype.removeClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为元素删除一个类名。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.removeClass"},"Element.prototype.toggleClass":{"requires":[],"parameters":[{"description":"类名。","type":"string","name":"className","isOptional":false}],"isStatic":false,"description":"为元素添加一个类名（如果该元素没有这个类名）或删除一个类名（如果该元素有这个类名）。","isConstructor":false,"returns":[{"type":"Element","description":"调用本方法的元素。"}],"type":"Element","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Element.prototype.toggleClass"},"components":{"requires":[],"parameters":[],"isStatic":true,"description":"为组件提供的命名空间。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"components"},"Event.prototype.screenX":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在屏幕上的 X 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.screenX"},"Event.prototype.screenY":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时鼠标在屏幕上的 Y 坐标，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"number","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.screenY"},"Animation":{"requires":[],"parameters":[{"description":"执行函数。","type":"Function","name":"proceed","isOptional":false},{"description":"可选参数，这些参数的默认值保存在 Animation.options 中。","type":"Object","name":"options","isOptional":true},{"description":"控速方式，默认为 'ease'。","type":"string","name":"options.transition","isOptional":false},{"description":"动画持续时间，单位为毫秒，默认为 400。","type":"number","name":"options.duration","isOptional":false},{"description":"动画开始之前执行的回调函数，若返回 false 则跳过该动画的执行。","type":"Function","name":"options.onBeforeStart","isOptional":false},{"description":"动画开始时（绘制第一帧之前）执行的回调函数。","type":"Function","name":"options.onStart","isOptional":false},{"description":"动画结束时（绘制最后一帧之后）执行的回调函数。","type":"Function","name":"options.onFinish","isOptional":false}],"isStatic":true,"description":"创建动画效果。","isConstructor":true,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"Animation"},"navigator":{"requires":[],"parameters":[],"isStatic":true,"description":"扩展 navigator 对象，提供更多关于浏览器的信息。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator"},"Event.prototype.bubbles":{"requires":[],"parameters":[],"isStatic":false,"description":"是否可以冒泡，不冒泡的事件不能使用事件代理。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.bubbles"},"navigator.isIElt8":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE，且版本小于 8。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIElt8"},"localStorage.getItem":{"requires":[],"parameters":[{"description":"要读取的数据名，不能为空字符串。","type":"string","name":"key","isOptional":false}],"isStatic":true,"description":"读取数据。","isConstructor":false,"returns":[{"type":"string","description":"对应的值。"}],"type":"string","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"name":"localStorage.getItem"},"navigator.isIElt9":{"requires":[],"parameters":[],"isStatic":true,"description":"浏览器是否为 IE，且版本小于 9。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"navigator.isIElt9"},"cookie":{"requires":[],"parameters":[],"isStatic":true,"description":"提供操作 cookie 的常用方法。","isConstructor":false,"returns":[],"type":"","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"cookie"},"Number.toInteger":{"requires":[],"parameters":[{"description":"要转化的值。","type":"*","name":"value","isOptional":false}],"isStatic":true,"description":"将提供的值转化为整数。","isConstructor":false,"returns":[{"type":"number","description":"转化结果。"}],"type":"number","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.tointeger"],"fires":[],"deprecated":"","examples":["  Number.toInteger([10.75]);\r  // 10\r  Number.toInteger('10px');\r  // 0"],"isFunction":true,"name":"Number.toInteger"},"Event.prototype.rightButton":{"requires":[],"parameters":[],"isStatic":false,"description":"事件发生时，鼠标右键是否被按下，仅在鼠标事件对象上有效。","isConstructor":false,"returns":[],"type":"boolean","since":"","see":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"name":"Event.prototype.rightButton"}};