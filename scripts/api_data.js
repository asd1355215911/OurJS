var apiData = {"Event#screenY":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在屏幕上的 Y 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#screenY"},"HTMLFormElement#getFieldValue":{"requires":[],"parameters":[{"description":"<p>域的名称。</p>","type":"string","name":"name","isOptional":false}],"description":"<p>获取本表单内某个域的当前值。</p><p>当该域只包含一个非 select-multiple 类型的控件时，如果具备有效值则返回该值，否则返回空字符串（将无效值与空字符串等同处理是为了降低后续处理的复杂度）。</p><p>其他情况（该域只包含一个 select-multiple 类型的控件或者多个任意类型的控件时）返回数组，值为空字符串的项不会被加入数组。</p>","returns":[{"type":"string|Array","description":"<p>域的当前值。</p>"}],"type":"string|Array","since":"","see":["http://www.w3.org/TR/REC-html40/interact/forms.html#successful-controls"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"HTMLFormElement#getFieldValue"},"Element#cancelAnimation":{"requires":[],"parameters":[{"description":"<p>要停止的第一种动画类型。</p>","type":"string","name":"type1","isOptional":true},{"description":"<p>要停止的第二种动画类型。</p>","type":"string","name":"type2","isOptional":true},{"description":"<p>要停止的第 n 种动画类型。</p>","type":"string","name":"…","isOptional":true}],"description":"<p>取消本元素正在播放的动画。</p><p>如果省略参数，则取消本元素所有正在播放的动画。</p><p>对于 morph 类型的动画，会在当前帧停止。</p><p>对于 highlight 类型的动画，会恢复到动画播放前的状态。</p><p>对于 fade 类型的动画，会跳过补间帧直接完成显示/隐藏。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#cancelAnimation"},"Event#bubbles":{"requires":[],"parameters":[],"description":"<p>是否可以冒泡，不冒泡的事件不能使用代理事件监听。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#bubbles"},"Element#on":{"requires":[],"parameters":[{"description":"<p>事件名称，格式为 <dfn><var>type</var>.<var>label</var>:relay(<var>selector</var>)</dfn>，详细信息请参考下表。</p><p>使用逗号分割多个事件名称，即可使用一个监听器监听该元素上的多个事件。</p><p>对于为不保证所有浏览器均可以冒泡的事件类型指定了代理监听的情况，会给出警告信息。</p><table><tr><th>组成部分</th><th>是否必选</th><th>详细描述</th></tr><tr><td><dfn><var>type</var></dfn></td><td>必选</td><td>要监听的事件类型。</td></tr><tr><td><dfn>.<var>label</var></dfn></td><td>可选</td><td>指定事件应用的场景，以便调用 off 方法时精确匹配要删除的监听器。<br>不打算删除的监听器没有必要指定标签。</td></tr><tr><td><dfn>:relay(<var>selector</var>)</dfn></td><td>可选</td><td>用于指定对本元素的后代元素中符合 selector 要求的元素代理事件监听。<br>这种情况下，在事件发生时，将认为事件是由被代理的元素监听到的，而不是本元素。</td></tr></table>","type":"string","name":"name","isOptional":false},{"description":"<p>监听器。</p><p>该函数将在对应的事件发生时被调用，传入事件对象作为参数。</p><p>该函数被调用时 this 的值为监听到本次事件的元素，即：</p><ul><li>如果是普通监听器，则 this 的值为本元素。</li><li>如果是代理监听器，则 this 的值为被代理的元素。</li></ul><p>如果该函数返回 false，则相当于调用了传入的事件对象的 stopPropagation 和 preventDefault 方法。</p>","type":"Function","name":"listener","isOptional":false}],"description":"<p>为本元素添加事件监听器。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":["http://mootools.net/","http://www.quirksmode.org/dom/events/index.html"],"attributes":[],"fires":[],"deprecated":"","examples":["$('#test').on('click', onClick);\r// 为 id 为 test 的元素添加 click 事件的监听器。","$('#test').on('click.temp', onClick);\r// 为 id 为 test 的元素添加 click 事件的监听器，并为其指定一个标签 temp。","$('#test').on('click:relay(a)', onClick);\r// 为 id 为 test 的元素添加一个代理监听器，为该元素所有的后代 A 元素代理 click 事件的监听。"],"isFunction":true,"category":"instance","name":"Element#on"},"navigator.isIE10":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE10。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIE10"},"Event#timeStamp":{"requires":[],"parameters":[],"description":"<p>事件发生的时间。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#timeStamp"},"Number.isNaN":{"requires":[],"parameters":[{"description":"<p>提供的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>检查提供的值是否为非数字。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isnan"],"attributes":[],"fires":[],"deprecated":"","examples":["isNaN(undefined);\r// true\rNumber.isNaN(undefined);\r// false"],"isFunction":true,"category":"static","name":"Number.isNaN"},"RegExp.escape":{"requires":[],"parameters":[{"description":"<p>要转义的字符串。</p>","type":"string","name":"string","isOptional":false}],"description":"<p>转义字符串中包含的正则表达式元字符。</p><p>转以后的字符串可以安全的作为正则表达式的一部分使用。</p>","returns":[{"type":"string","description":"<p>转义后的字符串。</p>"}],"type":"string","since":"","see":["http://prototypejs.org/"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"RegExp.escape"},"Object":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Object"},"Observable#on":{"requires":[],"parameters":[{"description":"<p>事件名称，格式为 <dfn><var>type</var>.<var>label</var></dfn>，详细信息请参考下表。</p><p>使用逗号分割多个事件名称，即可同时为多个事件注册同一个监听器。</p><table><tr><th></th><th>是否必选</th><th>详细描述</th></tr><tr><td><dfn><var>type</var></dfn></td><td>必选</td><td>要监听的事件类型</td></tr><tr><td><dfn>.<var>label</var></dfn></td><td>可选</td><td>给事件类型加上标签，以便调用 off 方法时精确匹配要删除的事件监听器。<br>不打算删除的事件监听器没有必要指定标签。</td></tr></table>","type":"string","name":"name","isOptional":false},{"description":"<p>事件监听器。</p><p>该函数被调用时 this 的值为本对象。</p>","type":"Function","name":"listener","isOptional":false}],"description":"<p>为本对象添加事件监听器。</p>","returns":[{"type":"Object","description":"<p>本对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Observable#on"},"Global":{"requires":[],"parameters":[],"description":"<p>全局对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"Global"},"window.fire":{"requires":[],"parameters":[{"description":"<p>事件类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>在事件对象上附加的数据。</p>","type":"Object","name":"data","isOptional":true}],"description":"<p>触发 window 的某类事件。</p>","returns":[{"type":"Object","description":"<p>window 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.fire"},"Event#stopPropagation":{"requires":[],"parameters":[],"description":"<p>阻止事件的传播，被阻止传播的事件将不会向其他元素传播。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#stopPropagation"},"Element#insertAdjacentText":{"requires":[],"parameters":[{"description":"<p>要插入的位置，可选值请参考下表。</p><table><tr><th>可选值</th><th>含义</th></tr><tr><td><dfn>beforeBegin</dfn></td><td>将文本插入到本元素之前。</td></tr><tr><td><dfn>afterBegin</dfn></td><td>将文本插入到本元素的第一个子元素之前。</td></tr><tr><td><dfn>beforeEnd</dfn></td><td>将文本插入到本元素的最后一个子元素之后。</td></tr><tr><td><dfn>afterEnd</dfn></td><td>将文本插入到本元素之后。</td></tr></table>","type":"string","name":"position","isOptional":false},{"description":"<p>文本。</p>","type":"Element","name":"text","isOptional":false}],"description":"<p>在本元素的指定位置插入文本。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#insertAdjacentText"},"Animation#pause":{"requires":[],"parameters":[],"description":"<p>暂停动画。</p><p>仅在动画处于“播放”或“倒放”状态时，调用此方法才有效。</p>","returns":[{"type":"Object","description":"<p>Animation 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Animation#pause"},"localStorage.removeItem":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false}],"description":"<p>从 localStorage 中删除一条数据。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"localStorage.removeItem"},"String#startsWith":{"requires":[],"parameters":[{"description":"<p>指定的子串。</p>","type":"string","name":"substring","isOptional":false}],"description":"<p>检查字符串是否以指定的子串开始。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"attributes":[],"fires":[],"deprecated":"","examples":["'abcdefg'.startsWith('a');\r// true"],"isFunction":true,"category":"instance","name":"String#startsWith"},"Array#forEach":{"requires":[],"parameters":[{"description":"<p>对数组中的每个元素都调用一次的回调函数。</p><p>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>遍历数组，对数组中的每一个元素都调用一次指定的函数。</p>","returns":[],"type":"","since":"","see":["http://es5.github.com/#x15.4.4.18","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach"],"attributes":[],"fires":[],"deprecated":"","examples":["var s = '';\r[1, 2, 3].forEach(function(item) {\r  s += item;\r});\rs;\r// 123"],"isFunction":true,"category":"instance","name":"Array#forEach"},"Number.isFinite":{"requires":[],"parameters":[{"description":"<p>提供的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>检查提供的值是否为有限的数字。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isfinite"],"attributes":[],"fires":[],"deprecated":"","examples":["isFinite(null);\r// true\rNumber.isFinite(null);\r// false"],"isFunction":true,"category":"static","name":"Number.isFinite"},"Observable#off":{"requires":[],"parameters":[{"description":"<p>事件名称。本对象上添加的所有名称与 name 匹配的监听器都将被删除。</p><p>使用逗号分割多个事件名称，即可同时删除多种名称的事件监听器。</p>","type":"string","name":"name","isOptional":false}],"description":"<p>删除本对象上已添加的事件监听器。</p>","returns":[{"type":"Object","description":"<p>本对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Observable#off"},"window.off":{"requires":[],"parameters":[{"description":"<p>事件名称，细节请参考 Element.prototype.off 的同名参数。</p>","type":"string","name":"name","isOptional":false}],"description":"<p>删除 window 上已添加的事件监听器。</p>","returns":[{"type":"Object","description":"<p>window 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.off"},"cookie.setItem":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false},{"description":"<p>数据值。</p>","type":"string","name":"value","isOptional":false},{"description":"<p>可选参数。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>限定生效的路径，默认为当前路径。</p>","type":"string","name":"options.path","isOptional":false},{"description":"<p>限定生效的域名，默认为当前域名。</p>","type":"string","name":"options.domain","isOptional":false},{"description":"<p>是否仅通过 SSL 连接 (HTTPS) 传输本条数据，默认为否。</p>","type":"boolean","name":"options.secure","isOptional":false},{"description":"<p>过期时间，默认为会话结束。</p><p>如果使用字符串类型，其表示时间的格式应为 'YYYY-MM-DD hh:mm:ss'。</p>","type":"string|Date","name":"options.expires","isOptional":false}],"description":"<p>在 cookie 中保存一条数据。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"cookie.setItem"},"Array#getLast":{"requires":[],"parameters":[],"description":"<p>获取本数组的最后一个元素。</p>","returns":[{"type":"*","description":"<p>本数组的最后一个元素。</p>"}],"type":"*","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].getLast();\r// 4"],"isFunction":true,"category":"instance","name":"Array#getLast"},"Request#send":{"requires":[],"parameters":[{"description":"<p>要发送的数据。</p><p>数据格式为 {key1: value1, key2: [value21, value22, ...], ...}，其中所有 value 都可以为任意基本类型的数据（在发送时它们都将被强制转换为字符串类型），另外 key 和 value 均不必做百分比编码。</p><p>本方法的参数不允许使用字符串类型的数据，因为无法判断指定的字符串值是否需要做百分比编码。</p>","type":"Object","name":"requestData","isOptional":true}],"description":"<p>发送请求。</p><p>如果上一次发送的请求尚未完成，则调用此方法无效。</p>","returns":[{"type":"Object","description":"<p>Request 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Request#send"},"Element#morph":{"requires":[],"parameters":[{"description":"<p>目标样式，元素将向指定的目标样式渐变。目标样式包含一条或多条要设置的样式声明，与 setStyles 的参数的差异如下：</p><p>1. 不能使用复合属性。</p><p>2. lineHeight 仅支持 'px' 单位的长度设置，而不支持数字。</p>","type":"Object","name":"styles","isOptional":false},{"description":"<p>动画选项。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>播放时间，单位是毫秒，默认为 400。</p>","type":"number","name":"options.duration","isOptional":false},{"description":"<p>控速函数名称或表达式，细节请参考 Animation.prototype.addClip 的同名参数，默认为 'ease'。</p>","type":"string","name":"options.timingFunction","isOptional":false},{"description":"<p>播放开始时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStart","isOptional":false},{"description":"<p>播放每一帧之后的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStep","isOptional":false},{"description":"<p>播放完成时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onFinish","isOptional":false}],"description":"<p>让本元素播放一个渐变动画。</p><p>如果本元素的动画播放列表中已经存在一个 morph 动画，则停止旧的，播放新的。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#morph"},"Global.execScript":{"requires":[],"parameters":[{"description":"<p>要执行的代码。</p>","type":"string","name":"code","isOptional":false}],"description":"<p>将字符串作为脚本执行，执行时的作用域为全局作用域。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["var a;\rexecScript('a = 128 * 2 + 256;');\ra;\r// 512"],"isFunction":true,"category":"static","name":"Global.execScript"},"Element#getFirstChild":{"requires":[],"parameters":[],"description":"<p>获取本元素的第一个子元素。</p>","returns":[{"type":"Element","description":"<p>本元素的第一个子元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getFirstChild"},"Observable.applyTo":{"requires":[],"parameters":[{"description":"<p>目标对象。</p>","type":"Object","name":"target","isOptional":false}],"description":"<p>将可观察的特性应用到目标对象。</p>","returns":[{"type":"Object","description":"<p>目标对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Observable.applyTo"},"Event#target":{"requires":[],"parameters":[],"description":"<p>触发事件的对象。</p>","returns":[],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#target"},"navigator.isIE6":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE6。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIE6"},"navigator.isIE7":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE7。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIE7"},"navigator.isIE8":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE8。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIE8"},"Element#insertTo":{"requires":[],"parameters":[{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false},{"description":"<p>要插入的位置，可选值请参考下表。</p><table><tr><th>可选值</th><th>含义</th></tr><tr><td><dfn>before</dfn></td><td>将本元素插入到目标元素之前。</td></tr><tr><td><dfn>top</dfn></td><td>将本元素插入到目标元素的第一个子元素之前。</td></tr><tr><td><dfn>bottom</dfn></td><td>将本元素插入到目标元素的最后一个子元素之后。</td></tr><tr><td><dfn>after</dfn></td><td>将本元素插入到目标元素之后。</td></tr></table><p>如果该参数被省略，则使用 <dfn>bottom</dfn> 作为默认值。</p>","type":"string","name":"position","isOptional":true}],"description":"<p>将本元素插入到目标元素的指定位置。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#insertTo"},"Animation#reverse":{"requires":[],"parameters":[],"description":"<p>倒放动画。</p><p>如果当前动画正在倒放中，或时间点已到达起点，则调用此方法无效。</p>","returns":[{"type":"Object","description":"<p>Animation 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Animation#reverse"},"navigator.isIE9":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE9。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIE9"},"Animation.createStyleRenderer":{"requires":[],"parameters":[{"description":"<p>要实施渐变效果的元素。</p>","type":"Element","name":"element","isOptional":false},{"description":"<p>要实施渐变效果的样式。支持相对长度值和颜色值，其中相对长度值目前仅支持像素单位，颜色值支持 140 个预命名颜色名称、#RRGGBB 格式、#RGB 格式或 rgb(正整数R, 正整数G, 正整数B) 格式。</p>","type":"Object","name":"styles","isOptional":false}],"description":"<p>创建样式渐变效果渲染器。</p><p>样式渐变效果渲染器只能指定一个元素。</p>","returns":[{"type":"Function","description":"<p>生成的渲染器。</p>"}],"type":"Function","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Animation.createStyleRenderer"},"RegExp":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"RegExp"},"document.$":{"requires":[],"parameters":[{"description":"<p>不同类型的元素表示。</p>","type":"string|Element","name":"e","isOptional":false}],"description":"<p>根据指定的参数获取/创建一个元素，并对其进行扩展。</p><p>当参数为一个元素的序列化之后的字符串（它可以包含子元素）时，会返回扩展后的、根据这个字符串反序列化的元素。</p><p>这里与其他实现相比有以下几点差异：</p><ul><li>忽略“IE 丢失源代码前的空格”的问题，通过脚本修复这个问题无实际意义（需要深度遍历）。</li><li>修改“IE 添加多余的 TBODY 元素”的问题的解决方案，在 wrappers 里预置一个 TBODY 即可。</li><li>忽略“脚本不会在动态创建并插入文档树后自动执行”的问题，因为这个处理需要封装追加元素的相关方法，并且还需要考虑脚本的 defer 属性在各浏览器的差异（IE 中添加 defer 属性的脚本在插入文档树后会执行），对于动态载入外部脚本文件的需求，应使用 document.loadScript 方法，而不应该使用本方法。</li></ul><p>在创建元素时，如果包含 table，建议写上 tbody。举例如下：</p><p>document.$('&lt;table&gt;&lt;tbody id=\"ranking\"&gt;&lt;/tbody&gt;&lt;/table&gt;');</p><p>当参数为一个元素的 id 时，会返回扩展后的、与指定 id 相匹配的元素。</p><p>当参数本身即为一个元素时，会返回扩展后的该元素。</p><p>当参数为其他情况时（包括 document 和 window）均返回 null。</p>","returns":[{"type":"Element","description":"<p>扩展后的元素。</p>"}],"type":"Element","since":"","see":["http://jquery.com/","http://mootools.net/","http://w3help.org/zh-cn/causes/SD9003"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.$"},"Date.parseExact":{"requires":[],"parameters":[{"description":"<p>代表日期的字符串，该字符串应该能够通过 Date.prototype.format 生成。</p><p>日期字符串中缺失的部分将使用默认值代替，各部分的默认值如下：</p><table><tr><th>日期字段</th><th>默认值</th></tr><tr><td>年</td><td>2012</td></tr><tr><td>月</td><td>1</td></tr><tr><td>日</td><td>1</td></tr><tr><td>时</td><td>0</td></tr><tr><td>分</td><td>0</td></tr><tr><td>秒</td><td>0</td></tr><tr><td>毫秒</td><td>0</td></tr><tr><td>时区</td><td>当地时区</td></tr></table><p>注意：未检查字符串内包含数据的有效性，若数据异常，将得不到预期的日期值。</p>","type":"string","name":"string","isOptional":false},{"description":"<p>由代表日期字段的标识符和其他字符组成的格式字符串，默认为 'YYYY-MM-DD'。格式请参考 Date.prototype.format 的同名参数。</p>","type":"string","name":"format","isOptional":true},{"description":"<p>字符串是否为世界标准时间。</p><p>当 isUTC 与 string 中已存在的 TZD 标识冲突时，isUTC 将被忽略。</p>","type":"boolean","name":"isUTC","isOptional":true}],"description":"<p>将以指定格式表示日期的字符串转换为日期对象。</p>","returns":[{"type":"Date","description":"<p>转换后的日期对象。</p>"}],"type":"Date","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["Date.parseExact('2012-06-25 12:00:00', 'YYYY-MM-DD hh:mm:ss')\r// 各浏览器中日期的字符串形式略有差异。\r// \"Mon Jun 25 2012 12:00:00 GMT+0800\"\rDate.parseExact('2012-12-21T23:14:35.000+08:00', 'YYYY-MM-DDThh:mm:ss.sTZD', true).format('世界标准时间YYYY年MM月DD日hh点mm分ss秒', true)\r// \"世界标准时间2012年12月21日15点14分35秒\"\rDate.parseExact('02-29 16:00', 'MM-DD hh:mm')\r// 年份缺失，使用默认值代替。\r// \"Wed Feb 29 2012 16:00:00 GMT+0800\""],"isFunction":true,"category":"static","name":"Date.parseExact"},"localStorage":{"requires":[],"parameters":[],"description":"<p>为不支持 localStorage 的浏览器提供类似的功能。</p><p>在不支持 localStorage 的浏览器中，会使用路径 '/favicon.ico' 来创建启用 userData 的元素。应保证上述路径存在，以免出现预料外的异常。</p><p>userData 的尺寸限制为每文件 128KB，每域 1024KB；受限站点每文件 64KB，每域 640KB。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"localStorage"},"Global.typeOf":{"requires":[],"parameters":[{"description":"<p>要判断的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>判断提供的值的数据类型，比 typeof 运算符返回的结果更明确（将对结果为 'object' 的情况进行更细致的区分）。</p><p>特殊情况：</p><p>一些特殊的对象，如 IE7 IE8 中的 XMLHttpRequest，是作为构造函数使用的，但使用本方法将得到 'object.Object' 的结果。考虑到需要判断这类对象的情况极为少见，因此未作处理。</p><p>IE6 IE7 IE8 IE9 IE10 中 SELECT.options === SELECT 为 true，因此 SELECT.options 将得到 'object.Node'，而不是预期的 'object.Collection'。</p><p>IE6 IE7 IE8 中在试图访问某些对象提供的属性/方法时，如 new ActiveXObject('Microsoft.XMLHTTP').abort，将抛出“对象不支持此属性或方法”的异常，因此也无法使用本方法对其进行判断。但可以对其使用 typeof 运算符并得到结果 'unknown'。</p>","returns":[{"type":"string","description":"<p>值的类型，可能为以下几种情况之一：</p><p>undefined</p><p>boolean</p><p>number</p><p>string</p><p>function</p><p>null</p><p>object.Boolean</p><p>object.Number</p><p>object.String</p><p>object.Array</p><p>object.Date</p><p>object.RegExp</p><p>object.Error</p><p>object.Math</p><p>object.JSON</p><p>object.Arguments</p><p>object.Global</p><p>object.Node</p><p>object.Collection</p><p>object.Object</p>"}],"type":"string","since":"","see":["http://mootools.net/","http://jquery.com/"],"attributes":[],"fires":[],"deprecated":"","examples":["typeOf(document);\r// 'object.Node'"],"isFunction":true,"category":"static","name":"Global.typeOf"},"Element#getClientRect":{"requires":[],"parameters":[],"description":"<p>获取本元素的 border-box 在视口中的坐标信息。</p>","returns":[{"type":"Object","description":"<p>包含位置（left、right、top、bottom）及尺寸（width、height）的对象，所有属性值均为 number 类型，单位为像素。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getClientRect"},"Element#getStyles":{"requires":[],"parameters":[{"description":"<p>指定要获取的特性名，可以为任意个。</p>","type":"Array","name":"propertyNames","isOptional":false}],"description":"<p>获取本元素的“计算后的样式”中一组特性的值。</p>","returns":[{"type":"Object","description":"<p>包含一组特性值的，格式为 {propertyName: propertyValue, ...} 的对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getStyles"},"Event#originalEvent":{"requires":[],"parameters":[],"description":"<p>原生事件对象。</p><p>使用 fire 方法创建的事件对象的 originalEvent.type 为空字符串。</p>","returns":[],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#originalEvent"},"document.addStyleRules":{"requires":[],"parameters":[{"description":"<p>包含样式规则的数组，其中每一项为一条规则。</p>","type":"Array","name":"rules","isOptional":false}],"description":"<p>添加样式规则。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.addStyleRules"},"localStorage.setItem":{"requires":[],"parameters":[{"description":"<p>数据名，不能为空字符串。</p>","type":"string","name":"key","isOptional":false},{"description":"<p>数据值。</p>","type":"string","name":"value","isOptional":false}],"description":"<p>在 localStorage 中保存一条数据。</p><p>注意：与原生的 localStorage 不同，IE6 IE7 的实现不允许 `~!@#$%^&*() 等符号出现在 key 中，可以使用 . 和 _ 符号，但不能以 . 和数字开头。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"localStorage.setItem"},"Element":{"requires":[],"parameters":[],"description":"<p>为无 Element 构造函数的浏览器创建 Element 对象，以确保在各浏览器中都可以通过 Element.prototype 为元素扩展新特性。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"Element"},"Event#relatedTarget":{"requires":[],"parameters":[],"description":"<p>事件被触发时的相关对象，仅在 mouseover/mouseout 类型的事件对象上有效。</p>","returns":[],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#relatedTarget"},"Event#offsetX":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在横向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#offsetX"},"Event#offsetY":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在纵向移动的偏移量，仅在 mousedragstart/mousedrag/mousedragend 类型的事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#offsetY"},"Array#getFirst":{"requires":[],"parameters":[],"description":"<p>获取本数组的第一个元素。</p>","returns":[{"type":"*","description":"<p>本数组的第一个元素。</p>"}],"type":"*","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].getFirst();\r// 0"],"isFunction":true,"category":"instance","name":"Array#getFirst"},"String":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"String"},"navigator.isIElt10":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE，且版本小于 10。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIElt10"},"localStorage.clear":{"requires":[],"parameters":[],"description":"<p>清空 localStorage 中的所有数据。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"localStorage.clear"},"Element#getChildCount":{"requires":[],"parameters":[],"description":"<p>获取本元素的子元素的总数。</p>","returns":[{"type":"number","description":"<p>本元素的子元素的总数。</p>"}],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getChildCount"},"Animation.createBasicRenderer":{"requires":[],"parameters":[{"description":"<p>渲染函数，传入两个参数“时间轴”和“偏移量”。</p><p>该函数被调用时 this 的值为所属的 Animation 对象。</p>","type":"Function","name":"renderer","isOptional":false}],"description":"<p>创建基本渲染器。</p>","returns":[{"type":"Function","description":"<p>生成的渲染器。</p>"}],"type":"Function","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Animation.createBasicRenderer"},"navigator.inStandardsMode":{"requires":[],"parameters":[],"description":"<p>是否工作在标准模式下。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.inStandardsMode"},"Element#find":{"requires":[],"parameters":[{"description":"<p>选择符。</p>","type":"string","name":"selector","isOptional":false}],"description":"<p>在本元素的后代元素中，根据指定的选择符查找元素。</p><p>本功能使用 Sizzle 实现，关于可以使用的 selector 信息，请参考 Sizzle 的相关说明。</p>","returns":[{"type":"Array","description":"<p>包含查找到的元素的数组。</p>"}],"type":"Array","since":"","see":["https://github.com/jquery/sizzle/wiki/Sizzle-Home"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#find"},"Array#map":{"requires":[],"parameters":[{"description":"<p>对数组中的每个元素都调用一次的回调函数。</p><p>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>对数组中的每一个元素都调用一次回调函数，并返回一个包含这个回调函数的每次调用后的返回值的新数组。</p>","returns":[{"type":"Array","description":"<p>包含 callback 的每次调用后的返回值的新数组。</p>"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.4.4.19","https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map"],"attributes":[],"fires":[],"deprecated":"","examples":["var a = [1, 2, 3].map(function(item) {\r  return item + 10;\r});\ra;\r// [11, 12, 13]"],"isFunction":true,"category":"instance","name":"Array#map"},"Element#clone":{"requires":[],"parameters":[{"description":"<p>是否进行深克隆。</p>","type":"boolean","name":"recursively","isOptional":true},{"description":"<p>是否保留本元素及后代元素上的所有事件监听器。</p>","type":"boolean","name":"keepListeners","isOptional":true}],"description":"<p>克隆本元素。</p><p>如果本元素有 id 属性，需注意克隆元素的 id 属性将与之有相同的值，必要时应进一步处理。</p><p>不要克隆包含脚本的元素，以免出现兼容性问题。</p><p>不要克隆包含样式表的元素，以免最终样式不符合预期。</p>","returns":[{"type":"Element","description":"<p>克隆后的元素。</p>"}],"type":"Element","since":"","see":["http://jquery.com/","http://mootools.net/","http://w3help.org/zh-cn/causes/SD9029"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#clone"},"Element#getStyle":{"requires":[],"parameters":[{"description":"<p>特性名（不支持复合特性），应使用 camel case 格式。</p>","type":"string","name":"propertyName","isOptional":false}],"description":"<p>获取本元素的“计算后的样式”中某个特性的值。</p><p>注意：不要尝试获取未插入文档树的元素的“计算后的样式”，它们存在兼容性问题。</p>","returns":[{"type":"string","description":"<p>对应的特性值，如果获取的是长度值，其单位未必是 px，可能是其定义时的单位。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getStyle"},"Date":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Date"},"window":{"requires":[],"parameters":[],"description":"<p>扩展 DOMWindow 对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"window"},"Array#filter":{"requires":[],"parameters":[{"description":"<p>对数组中的每个元素都调用一次的回调函数。</p><p>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>对数组中的每一个元素都调用一次回调函数，并且创建一个新的数组，该数组包含所有调用回调函数后返回值为 true 时对应的原数组元素。</p>","returns":[{"type":"Array","description":"<p>包含所有调用 callback 后返回值为 true 时对应的原数组元素的新数组。</p>"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.4.4.20","https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter"],"attributes":[],"fires":[],"deprecated":"","examples":["var a = [1, 2, 3].filter(function(item) {\r  return item % 2 === 1;\r});\ra;\r// [1, 3]"],"isFunction":true,"category":"instance","name":"Array#filter"},"Event#preventDefault":{"requires":[],"parameters":[],"description":"<p>阻止事件的默认行为。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#preventDefault"},"Array.from":{"requires":[],"parameters":[{"description":"<p>要转化为数组的值。</p><p>如果该值为 undefined 或 null，则返回空数组。</p><p>如果该值本身即为一个数组，则直接返回这个数组。</p><p>如果该值有 toArray 方法，则返回调用该方法后的结果。</p><p>如果该值可遍历，则返回一个包含各可遍历项的数组。</p><p>否则，返回一个仅包含该值的数组。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>将一个值转化为数组。</p>","returns":[{"type":"Array","description":"<p>由 value 转化而来的数组。</p>"}],"type":"Array","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Array.from"},"Event#which":{"requires":[],"parameters":[],"description":"<p>当一个设备触发事件时的相关代码。在键盘事件中为按下的键的代码。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#which"},"Boolean":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Boolean"},"Number.isInteger":{"requires":[],"parameters":[{"description":"<p>提供的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>检查提供的值是否为 IEEE-754 双精度整数。</p><p>取值范围在 ±Math.pow(2, 53) 之间。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.isinteger"],"attributes":[],"fires":[],"deprecated":"","examples":["Number.isInteger(9007199254740992);\r// false"],"isFunction":true,"category":"static","name":"Number.isInteger"},"Element#setStyles":{"requires":[],"parameters":[{"description":"<p>包含一条或多条要设置的样式声明，格式为 {propertyName: propertyValue, ...} 的对象。</p>","type":"Object","name":"declarations","isOptional":false}],"description":"<p>为本元素设置一组行内样式声明。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#setStyles"},"Element#getParent":{"requires":[],"parameters":[],"description":"<p>获取本元素的父元素。</p>","returns":[{"type":"Element","description":"<p>本元素的父元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getParent"},"Animation#play":{"requires":[],"parameters":[],"description":"<p>播放动画。</p><p>如果当前动画正在播放中，或时间点已到达终点，则调用此方法无效。</p>","returns":[{"type":"Object","description":"<p>Animation 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Animation#play"},"window.getClientSize":{"requires":[],"parameters":[],"description":"<p>获取视口可视区域的尺寸。</p><p>IE9 Firefox Chrome Safari Opera 有 window.innerWidth 和 window.innerHeight 属性，但这个值是包含了滚动条宽度的值。</p><p>为保持一致性，不使用这两个属性来获取文档可视区域尺寸。</p>","returns":[{"type":"Object","description":"<p>尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。</p>"}],"type":"Object","since":"","see":["http://www.w3.org/TR/cssom-view/#dom-window-innerwidth","http://www.w3.org/TR/cssom-view/#dom-window-innerheight"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.getClientSize"},"Math":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Math"},"Math.limit":{"requires":[],"parameters":[{"description":"<p>输入的数字。</p>","type":"number","name":"number","isOptional":false},{"description":"<p>允许的数字下限。</p>","type":"number","name":"min","isOptional":false},{"description":"<p>允许的数字上限。</p>","type":"number","name":"max","isOptional":false}],"description":"<p>将输入数字限制于 min 和 max 之间（包含 min 和 max）。</p>","returns":[{"type":"number","description":"<p>输出的数字。</p>"}],"type":"number","since":"","see":["http://mootools.net/"],"attributes":[],"fires":[],"deprecated":"","examples":["Math.limit(100, 0, 80);\r// 80\rMath.limit(NaN, 0, 80);\r// 0"],"isFunction":true,"category":"static","name":"Math.limit"},"Math.randomRange":{"requires":[],"parameters":[{"description":"<p>要获取的随机数的下限，整数。</p>","type":"number","name":"min","isOptional":false},{"description":"<p>要获取的随机数的上限，整数。</p>","type":"number","name":"max","isOptional":false}],"description":"<p>生成介于 min 和 max 之间（包含 min 和 max）的伪随机整数。</p>","returns":[{"type":"number","description":"<p>生成的伪随机整数。</p>"}],"type":"number","since":"","see":["http://mootools.net/"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Math.randomRange"},"Element#off":{"requires":[],"parameters":[{"description":"<p>事件名称。本元素上添加的所有名称与 name 匹配的监听器都将被删除。</p><p>使用逗号分割多个事件名称，即可同时删除该元素上的多个监听器。</p>","type":"string","name":"name","isOptional":false}],"description":"<p>删除本元素上已添加的事件监听器。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["$('#test').off('click');\r// 为 id 为 test 的元素删除名为 click 的监听器。","$('#test').off('click.temp');\r// 为 id 为 test 的元素删除名为 click.temp 的监听器。","$('#test').off('click:relay(a)');\r// 为 id 为 test 的元素删除名为 click:relay(a) 的监听器。"],"isFunction":true,"category":"instance","name":"Element#off"},"Request":{"requires":[],"parameters":[{"description":"<p>请求地址。</p>","type":"string","name":"url","isOptional":false},{"description":"<p>可选项。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>请求模式，使用 'xhr' 则为 XHR 模式，使用 'jsonp' 则为 JSONP 模式，默认为 'xhr'，大小写不敏感。</p>","type":"string","name":"options.mode","isOptional":false},{"description":"<p>请求方法，在 XHR 模式下可以使用 'get' 和 'post'，默认为 'get'，在 JSONP 模式下永远为 'get'，大小写不敏感。</p><p>如果使用 'get' 方式，应将整个 URL 的长度控制在 2048 个字符以内。</p>","type":"string","name":"options.method","isOptional":false},{"description":"<p>是否允许浏览器的缓存生效，在 XHR 模式下可以使用 true 和 false，默认为 true，在 JSONP 模式下永远为 false。</p>","type":"boolean","name":"options.useCache","isOptional":false},{"description":"<p>是否使用异步方式，在 XHR 模式下可以使用 true 和 false，默认为 true，在 JSONP 模式下永远为 true。</p>","type":"boolean","name":"options.async","isOptional":false},{"description":"<p>请求最短时间，单位为 ms，默认为 NaN，即无最短时间限制，async 为 true 时有效。</p>","type":"number","name":"options.minTime","isOptional":false},{"description":"<p>请求超时时间，单位为 ms，默认为 NaN，即无超时时间限制，async 为 true 时有效。</p>","type":"number","name":"options.maxTime","isOptional":false},{"description":"<p>用户名，仅在 XHR 模式下有效，默认为空字符串，即不指定用户名。</p>","type":"string","name":"options.username","isOptional":false},{"description":"<p>密码，仅在 XHR 模式下有效，默认为空字符串，即不指定密码。</p>","type":"string","name":"options.password","isOptional":false},{"description":"<p>要设置的 request headers，仅在 XHR 模式下有效，格式为 {key: value, ...} 的对象，默认为 {'X-Requested-With': 'XMLHttpRequest', 'Accept': '*&#47;*'}。</p>","type":"Object","name":"options.headers","isOptional":false},{"description":"<p>发送数据的内容类型，仅在 XHR 模式下且 method 为 'post' 时有效，默认为 'application/x-www-form-urlencoded'。</p>","type":"string","name":"options.contentType","isOptional":false},{"description":"<p>指定服务端获取 JSONP 前缀的参数名，仅在 JSONP 模式下有效，默认为 'callback'，大小写敏感。</p>","type":"string","name":"options.prefixKey","isOptional":false}],"description":"<p>对一个指定的资源发起请求，并获取响应数据。</p><p>所有 Request 的实例都具备 Observable 特性。</p><p>每个 Request 的实例都对应一个资源，实例创建后可以重复使用。</p><p>创建 Request 时，可以选择使用 XHR 模式（同域请求时）或 JSONP 模式（跨域请求时）。</p><p>在 JSONP 模式下，如果服务端返回的响应体不是 JSONP 格式的数据，请求将出现错误，并且这个错误是无法被捕获的。由于 JSONP 请求的原理是直接执行另一个域内的脚本，因此它并不安全。如果该域遭到攻击，本域也可能会受到影响。</p><p>两种模式的请求结果略有差异，它们都会被传入 abort、timeout、complete 和 finish 事件监听器中。</p><p>XHR 模式的请求结果中包含以下属性：</p><p>{number} status 状态码。</p><p>{string} statusText 状态描述。</p><p>{Object} headers 响应头。</p><p>{string} text 响应文本。</p><p>{XMLDocument} xml 响应 XML 文档。</p><p>JSONP 模式的请求结果中包含以下属性：</p><p>{number} status 状态码。</p><p>{string} statusText 状态描述。</p><p>{Object} data 请求结果。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[{"description":"<p>{string} event.data 解析后的待发送数据。</p><p>请求开始时触发。</p>","name":"start"},{"description":"<p>请求被取消时触发。</p>","name":"abort"},{"description":"<p>请求超时时触发。</p>","name":"timeout"},{"description":"<p>请求完成时触发。</p>","name":"complete"},{"description":"<p>请求结束时触发。</p><p>只要请求已开始，此事件就必然会被触发（跟随在 abort、timeout 或 complete 任一事件之后）。</p><p>这样设计的好处是在请求结束时可以统一处理一些状态的设定或恢复，如将 start 事件监听器中呈现到用户界面的提示信息隐藏。</p>","name":"finish"}],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Request"},"Request#ongoing":{"requires":[],"parameters":[],"description":"<p>请求是否正在进行中。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Request#ongoing"},"Object.toQueryString":{"requires":[],"parameters":[{"description":"<p>要转换的对象，该对象的每个属性名和属性值都将以键值对的形式被转换为字符串。</p><p>如果某个属性值为 undefined 或 null，则忽略该属性。</p><p>如果某个属性值为数组，则表示其对应的属性名有多个有效值。</p>","type":"Object","name":"object","isOptional":false},{"description":"<p>转换时不使用 encodeURIComponent 编码。</p>","type":"boolean","name":"dontEncode","isOptional":true}],"description":"<p>将一个对象转换为用于 HTTP 传输的查询字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["Object.toQueryString({a: undefined, b: null, c: '', d: 100, e: ['Composite Value', true]});\r// \"c=&d=100&e=Composite%20Value&e=true\""],"isFunction":true,"category":"static","name":"Object.toQueryString"},"Element#removeData":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false}],"description":"<p>从本元素中删除一条自定义数据。</p><p>注意：IE6 IE7 在 removeAttribute 时，key 参数是大小写敏感的。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#removeData"},"location":{"requires":[],"parameters":[],"description":"<p>扩展 location 对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"location"},"Element#fade":{"requires":[],"parameters":[{"description":"<p>模式，默认为 'toggle'。</p><table><tr><th>可选值</th><th>含义</th></tr><tr><td><dfn>toggle</dfn></td><td>如果本元素的动画播放列表中已经存在一个 fade 动画，则使用与这个已存在的动画相反的模式。<br>否则若本元素的 display 为 none 则为淡入模式，display 不为 none 则为淡出模式。</td></tr><tr><td><dfn>in</dfn></td><td>淡入模式。</td></tr><tr><td><dfn>out</dfn></td><td>淡出模式。</td></tr></table>","type":"string","name":"mode","isOptional":true},{"description":"<p>动画选项。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>播放时间，单位是毫秒，默认为 200。</p>","type":"number","name":"options.duration","isOptional":false},{"description":"<p>控速函数名称或表达式，细节请参考 Animation.prototype.addClip 的同名参数，默认为 'easeIn'。</p>","type":"string","name":"options.timingFunction","isOptional":false},{"description":"<p>播放开始时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStart","isOptional":false},{"description":"<p>播放每一帧之后的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStep","isOptional":false},{"description":"<p>播放完成时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onFinish","isOptional":false}],"description":"<p>让本元素播放一个淡入或淡出动画。</p><p>如果本元素的动画播放列表中已经存在一个 fade 动画，则停止旧的，播放新的。这种情况下新动画的播放时间会小于设定的时间（具体取决于旧动画已播放的百分比）。</p><p>否则若本元素的 display 不为 none 则不能播放淡入动画，display 为 none 则不能播放淡出动画。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#fade"},"String#contains":{"requires":[],"parameters":[{"description":"<p>指定的子串。</p>","type":"string","name":"substring","isOptional":false}],"description":"<p>检查字符串是否包含指定的子串。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"attributes":[],"fires":[],"deprecated":"","examples":["'abcdefg'.contains('cd');\r// true"],"isFunction":true,"category":"instance","name":"String#contains"},"Object.mixin":{"requires":[],"parameters":[{"description":"<p>目标对象。</p>","type":"Object","name":"destination","isOptional":false},{"description":"<p>源对象，其 properties 会被复制到 destination 中。</p>","type":"Object","name":"source","isOptional":false},{"description":"<p>过滤要添加的 source 中的 properties 的名单。</p>","type":"Object","name":"filter","isOptional":true},{"description":"<p>仅当 source 中的 key 包含于 whiteList 时，对应的 property 才会被复制到 destination 中。</p>","type":"Array","name":"filter.whiteList","isOptional":false},{"description":"<p>如果 source 中的 key 包含于 blackList，则对应的 property 不会被复制到 destination 中。</p><p>如果 blackList 与 whiteList 有重复的值，则 whiteList 中的将被忽略。</p>","type":"Array","name":"filter.blackList","isOptional":false}],"description":"<p>将源对象（不包含原型链）上的 properties 添加到目标对象中。</p><p>source 中的 property 会覆盖 destination 中的同名 property。</p><table><tr><th>destination (before)</th><th>source</th><th>destination (after)</th></tr><tr><td>a: 0</td><td></td><td>a: 0</td></tr><tr><td>b: 0</td><td>b: 1</td><td>b: 1</td></tr><tr><td></td><td>c: 1</td><td>c: 1</td></tr></table>","returns":[{"type":"Object","description":"<p>目标对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["Object.mixin({a: 0}, {b: 1});\r// {a: 0, b: 1}","Object.mixin({a: 0, b: 0}, {a: 1, b: 1}, {whiteList: ['a']});\r// {a: 1, b: 0}\rObject.mixin({a: 0, b: 0}, {a: 1, b: 1}, {whiteList: ['a', 'b'], blackList: ['a']});\r// {a: 0, b: 1}"],"isFunction":true,"category":"static","name":"Object.mixin"},"Widget.parse":{"requires":[],"parameters":[{"description":"<p>要解析的元素。</p>","type":"Element","name":"element","isOptional":false},{"description":"<p>是否解析该元素的后代元素。</p>","type":"boolean","name":"recursively","isOptional":true}],"description":"<p>将符合条件的元素解析为 Widget。</p><p>在 DOM 树解析完成后会自动将页面内的全部符合条件的元素解析为 Widget，因此仅应在必要时调用本方法。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Widget.parse"},"Object.forEach":{"requires":[],"parameters":[{"description":"<p>要遍历的对象。</p>","type":"Object","name":"object","isOptional":false},{"description":"<p>用来遍历的函数，参数为 value，key，object。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>遍历一个对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Object.forEach"},"Widget":{"requires":[],"parameters":[],"description":"<p>提供对 Widget 的支持。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"Widget"},"Element#getPreviousSibling":{"requires":[],"parameters":[],"description":"<p>获取与本元素相邻的上一个元素。</p>","returns":[{"type":"Element","description":"<p>与本元素相邻的上一个元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getPreviousSibling"},"String#toArray":{"requires":[],"parameters":[],"description":"<p>将字符串转化为数组。</p>","returns":[{"type":"Array","description":"<p>从字符串转化的数组。</p>"}],"type":"Array","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"attributes":[],"fires":[],"deprecated":"","examples":["'abcdefg'.toArray();\r// ['a', 'b', 'c', 'd', 'e', 'f', 'g']"],"isFunction":true,"category":"instance","name":"String#toArray"},"Element#getNextSibling":{"requires":[],"parameters":[],"description":"<p>获取与本元素相邻的下一个元素。</p>","returns":[{"type":"Element","description":"<p>与本元素相邻的下一个元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getNextSibling"},"Number#toJSON":{"requires":[],"parameters":[],"description":"<p>将数字转换为 JSON 格式的字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Number#toJSON"},"Array#lastIndexOf":{"requires":[],"parameters":[{"description":"<p>指定的元素。</p>","type":"*","name":"searchElement","isOptional":false},{"description":"<p>从指定索引为起始点开始查找，默认为数组的长度。</p><p>如果该值大于数组的长度，则使用数组的长度作为查找起始点。</p><p>如果该值为负数，则表示从数组的末尾开始计算的偏移量，即使用 (fromIndex + 数组的长度) 作为查找起始点，如果这个结果仍为负数，则使用 0 作为查找起始点。</p>","type":"number","name":"fromIndex","isOptional":true}],"description":"<p>返回数组中最后一次出现指定的元素的索引。</p>","returns":[{"type":"number","description":"<p>索引值，如果数组中不包含指定的元素，则返回 -1。</p>"}],"type":"number","since":"","see":["http://es5.github.com/#x15.4.4.15","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf"],"attributes":[],"fires":[],"deprecated":"","examples":["[1, 2, 3, 2, 1].lastIndexOf(2);\r// 3\r[1, 2, 3, 2, 1].lastIndexOf(2, 2);\r// 1\r[1, 2, 3, 2, 1].lastIndexOf(2, -3)\r// 1\r[1, 2, 3, 2, 1].lastIndexOf(8)\r// -1"],"isFunction":true,"category":"instance","name":"Array#lastIndexOf"},"Event#altKey":{"requires":[],"parameters":[],"description":"<p>事件发生时，alt 键是否被按下。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#altKey"},"window.getScrollSize":{"requires":[],"parameters":[],"description":"<p>获取视口滚动区域的尺寸。当内容不足以充满视口可视区域时，返回视口可视区域的尺寸。</p>","returns":[{"type":"Object","description":"<p>尺寸，包含 width 和 height 两个数字类型的属性，单位为像素。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.getScrollSize"},"Event":{"requires":[],"parameters":[{"description":"<p>事件类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>原生事件对象。</p>","type":"Object","name":"e","isOptional":false}],"description":"<p>事件包装对象。</p><p>如果事件对象是通过调用 Element/document/window 的 fire 方法产生的，其除了 originalEvent、type 和 target 之外的其他属性值均可能会被重写。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Event"},"Animation#addClip":{"requires":[],"parameters":[{"description":"<p>使用 Animation.create*Renderer 创建的渲染器。</p><p>该函数被调用时 this 的值为所属的 Animation 对象。</p>","type":"Function","name":"renderer","isOptional":false},{"description":"<p>延时。</p>","type":"number","name":"delay","isOptional":false},{"description":"<p>播放时间。</p>","type":"number","name":"duration","isOptional":false},{"description":"<p>控速函数名称或表达式。</p><p>支持的名称有 linear，bounceIn，bounceOut，ease，easeIn，easeOut，easeInOut，easeOutIn。</p><p>表达式的格式为 <dfn>cubicBezier(<var>p1x</var>, <var>p1y</var>, <var>p2x</var>, <var>p2y</var>)</dfn>，各参数均为浮点数，其中 <var>p1x</var> 和 <var>p2x</var> 的取值范围必须在 [0, 1] 之间。</p>","type":"string","name":"timingFunction","isOptional":false}],"description":"<p>添加动画剪辑。</p>","returns":[{"type":"Object","description":"<p>Animation 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Animation#addClip"},"Number#padZero":{"requires":[],"parameters":[{"description":"<p>数字总位数（包括整数位和小数位），当数字实际位数小于指定的数字总位数时，会在左侧补零。</p>","type":"number","name":"digits","isOptional":false}],"description":"<p>在数字左侧补零，以使数字更整齐。</p>","returns":[{"type":"string","description":"<p>补零后的数字、NaN、Infinity 或 -Infinity 的字符形式。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Number#padZero"},"Event#stopImmediatePropagation":{"requires":[],"parameters":[],"description":"<p>立即阻止事件的传播，被立即阻止传播的事件不仅不会向其他元素传播，也不会在当前元素上被分发到其他的监听器。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#stopImmediatePropagation"},"window.on":{"requires":[],"parameters":[{"description":"<p>事件名称，细节请参考 Element.prototype.on 的同名参数。</p>","type":"string","name":"name","isOptional":false},{"description":"<p>监听器，细节请参考 Element.prototype.on 的同名参数。</p>","type":"Function","name":"listener","isOptional":false}],"description":"<p>为 window 添加事件监听器。</p><p>特殊事件：beforeunload</p><ul><li>该事件只能存在一个监听器，因此不能使用标签。</li><li>不会有事件对象作为参数传入监听器。</li><li>如果添加了多个监听器，则只有最后添加的生效。</li><li>可以删除当前生效的监听器。</li></ul>","returns":[{"type":"Object","description":"<p>window 对象。</p>"}],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/BX2047"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.on"},"navigator.userAgentInfo.name":{"requires":[],"parameters":[],"description":"<p>浏览器名称，值为以下之一：IE|Firefox|Chrome|Safari|Opera。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.userAgentInfo.name"},"Event#wheelDown":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标滚轮是否正在向下滚动，仅在 mousewheel 类型的事件对象上有效。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#wheelDown"},"Element#removeClass":{"requires":[],"parameters":[{"description":"<p>类名，如果要同时指定多个类名，使用逗号将它们分开即可。</p>","type":"string","name":"className","isOptional":false}],"description":"<p>为本元素删除指定的类名。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#removeClass"},"Element#toggleClass":{"requires":[],"parameters":[{"description":"<p>类名，如果要同时指定多个类名，使用逗号将它们分开即可。</p>","type":"string","name":"className","isOptional":false}],"description":"<p>如果本元素没有指定的类名，则添加指定的类名，否则删除指定的类名。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#toggleClass"},"Element#getData":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false}],"description":"<p>从本元素中读取一条自定义数据。</p>","returns":[{"type":"string","description":"<p>数据值。</p><p>如果指定的数据名不存在，返回 undefined。</p>"}],"type":"string","since":"","see":["http://www.w3.org/TR/html5/global-attributes.html#embedding-custom-non-visible-data-with-the-data-attributes"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getData"},"Element#swap":{"requires":[],"parameters":[{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false}],"description":"<p>交换本元素目标元素的位置。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#swap"},"window.getPageOffset":{"requires":[],"parameters":[],"description":"<p>获取视口的滚动偏移量。</p><p>一些浏览器支持 window.scrollX/window.scrollY 或 window.pageXOffset/window.pageYOffset 直接获取视口的滚动偏移量。</p><p>这里使用通用性更强的方法实现。</p>","returns":[{"type":"Object","description":"<p>坐标，包含 x 和 y 两个数字类型的属性，单位为像素。</p>"}],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/BX9008"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.getPageOffset"},"Event#type":{"requires":[],"parameters":[],"description":"<p>事件类型。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#type"},"Widget.register":{"requires":[],"parameters":[{"description":"<p>Widget 的类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>Widget 的解析器。</p>","type":"Object","name":"parser","isOptional":false},{"description":"<p>可选，包含要应用到此类 Widget 的 CSS 规则集的数组。</p>","type":"Array","name":"parser.css","isOptional":false},{"description":"<p>可选，包含此类 Widget 的默认配置的对象。</p>","type":"Object","name":"parser.config","isOptional":false},{"description":"<p>可选，包含此类 Widget 的实例方法的对象。</p>","type":"Object","name":"parser.methods","isOptional":false},{"description":"<p>可选，包含此类 Widget 能够触发的事件名称的数组。</p>","type":"Array","name":"parser.events","isOptional":false},{"description":"<p>必选，此类 Widget 的初始化函数。</p>","type":"Function","name":"parser.initialize","isOptional":false}],"description":"<p>注册一个 Widget 解析器。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Widget.register"},"Element#innerText":{"requires":[],"parameters":[],"description":"<p>获取/设置本元素内的文本信息。</p><p>注意：getter 在处理 BR 元素或换行符时，各浏览器的行为不一致。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Element#innerText"},"location.parameters":{"requires":[],"parameters":[],"description":"<p>通过此对象可以访问当前页面地址中查询字符串所携带的参数。</p><p>注意：获取的参数值均为原始值（未经过 decodeURIComponent 解码）。</p>","returns":[],"type":"Object","since":"","see":["http://w3help.org/zh-cn/causes/HD9001"],"attributes":[],"fires":[],"deprecated":"","examples":["// 设页面地址为 test.html?a=ok&b=100&b=128\rlocation.parameters\r// {a:'ok', b:['100', '128']}"],"isFunction":false,"category":"static","name":"location.parameters"},"Request.options":{"requires":[],"parameters":[],"description":"<p>默认选项。</p><p>修改 Request.options 即可更改 Request 的默认选项，新的默认选项仅对后续创建的实例生效。</p>","returns":[],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"Request.options"},"Element#fire":{"requires":[],"parameters":[{"description":"<p>事件类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>在事件对象上附加的数据。</p><p>data 的属性会被追加到事件对象中，但名称为 originalEvent、type、target 的属性除外。如果不希望事件在 DOM 树中传播，指定其 bubbles 属性为 false 即可。</p>","type":"Object","name":"data","isOptional":true}],"description":"<p>触发本元素的某类事件。</p><p>调用本方法时，仅会调用使用 on 方法添加的监听器，并且其默认行为也将被阻止（因为这个事件并不是由用户的操作触发的）。</p><p>如果需要执行此类事件的默认行为，可以直接在目标元素上调用对应的方法（如 click、select、submit 等），这种情况下除了会调用使用 on 方法添加的监听器之外，使用其他方式添加的监听器也可能被调用。</p>","returns":[{"type":"Object","description":"<p>事件对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#fire"},"Date.now":{"requires":[],"parameters":[],"description":"<p>获取系统当前的时间戳。</p>","returns":[{"type":"number","description":"<p>系统当前的时间戳。</p>"}],"type":"number","since":"","see":["http://es5.github.com/#x15.9.4.4"],"attributes":[],"fires":[],"deprecated":"","examples":["Date.now() === new Date().getTime();\r// true"],"isFunction":true,"category":"static","name":"Date.now"},"Event#leftButton":{"requires":[],"parameters":[],"description":"<p>事件发生时，鼠标左键是否被按下，仅在鼠标事件对象上有效。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#leftButton"},"Element#compareDocumentPosition":{"requires":[],"parameters":[{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false}],"description":"<p>比较本元素和目标元素在文档树中的位置关系。</p><p>调用本方法后返回的 number 值的含义：</p><table><tr><th>Bits</th><th>Number</th><th>Meaning</th></tr><tr><td>000000</td><td>0</td><td>节点 A 与节点 B 相等</td></tr><tr><td>000001</td><td>1</td><td>节点 A 与节点 B 在不同的文档（或者一个在文档之外）</td></tr><tr><td>000010</td><td>2</td><td>节点 B 在节点 A 之前</td></tr><tr><td>000100</td><td>4</td><td>节点 A 在节点 B 之前</td></tr><tr><td>001000</td><td>8</td><td>节点 B 包含节点 A</td></tr><tr><td>010000</td><td>16</td><td>节点 A 包含节点 B</td></tr><tr><td>100000</td><td>32</td><td>浏览器的私有使用</td></tr></table>","returns":[{"type":"number","description":"<p>比较结果。</p>"}],"type":"number","since":"","see":["http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-compareDocumentPosition","http://ejohn.org/blog/comparing-document-position/"],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#compareDocumentPosition"},"String#toJSON":{"requires":[],"parameters":[],"description":"<p>将字符串转换为 JSON 格式的字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"String#toJSON"},"Observable":{"requires":[],"parameters":[],"description":"<p>可观察的特性。</p><p>具备此特性的对象即具备处理事件的能力。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Observable"},"Array#remove":{"requires":[],"parameters":[{"description":"<p>指定的元素。</p>","type":"*","name":"element","isOptional":false}],"description":"<p>移除数组中第一个与指定的元素相同的元素。</p><p>IE6 无法通过 [undefined].remove(undefined) 或 [undefined].remove() 成功移除数组中的元素。</p>","returns":[{"type":"boolean","description":"<p>指定的元素是否存在并被移除。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["[1, 2, 1].remove(1);\r// [2, 1]"],"isFunction":true,"category":"instance","name":"Array#remove"},"Element#outerText":{"requires":[],"parameters":[],"description":"<p>获取本元素内的文本信息，或使用文本信息替换本元素。</p><p>与 innerText 不同，如果设置一个元素的 outerText，那么设置的字符串将作为文本节点替换本元素在文档树中的位置。</p><p>注意：getter 在处理 BR 元素或换行符时，各浏览器的行为不一致。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Element#outerText"},"String#camelize":{"requires":[],"parameters":[{"description":"<p>是否使用大驼峰式命名法（又名 Pascal 命名法），默认为 false，即使用小驼峰式命名法。</p>","type":"boolean","name":"useUpperCamelCase","isOptional":true}],"description":"<p>以 camelize 的形式重组字符串。</p>","returns":[{"type":"string","description":"<p>重组后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["'foo-bar'.camelize();\r// 'fooBar'\r'foo-bar'.camelize(true);\r// 'FooBar'\r'HTMLFormElement'.camelize();\r// 'htmlFormElement'"],"isFunction":true,"category":"instance","name":"String#camelize"},"Number":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Number"},"Element#insertAdjacentElement":{"requires":[],"parameters":[{"description":"<p>要插入的位置，可选值请参考下表。</p><table><tr><th>可选值</th><th>含义</th></tr><tr><td><dfn>beforeBegin</dfn></td><td>将目标元素插入到本元素之前。</td></tr><tr><td><dfn>afterBegin</dfn></td><td>将目标元素插入到本元素的第一个子元素之前。</td></tr><tr><td><dfn>beforeEnd</dfn></td><td>将目标元素插入到本元素的最后一个子元素之后。</td></tr><tr><td><dfn>afterEnd</dfn></td><td>将目标元素插入到本元素之后。</td></tr></table>","type":"string","name":"position","isOptional":false},{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false}],"description":"<p>在本元素的指定位置插入目标元素。</p>","returns":[{"type":"Element","description":"<p>目标元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#insertAdjacentElement"},"navigator.userAgentInfo.engine":{"requires":[],"parameters":[],"description":"<p>浏览器渲染引擎的类型，值为以下之一：Trident|WebKit|Gecko|Presto。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.userAgentInfo.engine"},"Element#replace":{"requires":[],"parameters":[{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false},{"description":"<p>是否保留目标元素及后代元素上的所有事件监听器。</p>","type":"boolean","name":"keepListeners","isOptional":true}],"description":"<p>使用本元素替换目标元素。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#replace"},"Array#some":{"requires":[],"parameters":[{"description":"<p>用来检查的回调函数。</p><p>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。</p><p>回调函数返回 true 表示当前元素通过检查，反之表示未通过检查。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>检查数组中是否有任一元素符合某个条件。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.4.17","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some"],"attributes":[],"fires":[],"deprecated":"","examples":["[1, 2, 3].some(function(item) {\r  return item === 2;\r});\r// true"],"isFunction":true,"category":"instance","name":"Array#some"},"Date#format":{"requires":[],"parameters":[{"description":"<p>由代表日期字段的标识符和其他字符组成的格式字符串，默认为 'YYYY-MM-DD'。</p><p>各标识符及其含义：</p><table><tr><th>字符</th><th>含义</th></tr><tr><td>YYYY</td><td>四位数年份。</td></tr><tr><td>MM</td><td>两位数月份。</td></tr><tr><td>DD</td><td>两位数日期。</td></tr><tr><td>hh</td><td>两位数小时，24 小时制。</td></tr><tr><td>mm</td><td>两位数分钟。</td></tr><tr><td>ss</td><td>两位数秒钟。</td></tr><tr><td>s</td><td>三位数毫秒。</td></tr><tr><td>TZD</td><td>时区指示。世界标准时间显示大写字母 Z，其他时区用当地时间加时差表示。</td></tr></table>","type":"string","name":"format","isOptional":true},{"description":"<p>是否格式化为世界标准时间。</p>","type":"boolean","name":"toUTC","isOptional":true}],"description":"<p>将日期对象格式化为字符串。</p>","returns":[{"type":"string","description":"<p>格式化后的字符串。</p>"}],"type":"string","since":"","see":["http://www.w3.org/TR/NOTE-datetime","http://en.wikipedia.org/wiki/ISO_8601","http://blog.stevenlevithan.com/archives/date-time-format"],"attributes":[],"fires":[],"deprecated":"","examples":["new Date(2000,0,1).format()\r// \"2000-01-01\"\rnew Date(2000,2,1).format('MM-DD hh:mm', true)\r// \"02-29 16:00\"\rnew Date('Fri, 21 Dec 2012 15:14:35 GMT').format('YYYY-MM-DDThh:mm:ss.sTZD')\r// \"2012-12-21T23:14:35.000+08:00\"\rnew Date(2012, 0, 1).format('YYYYYY')\r// 未被成功匹配的字符均会作为普通字符显示。\r// \"2012YY\""],"isFunction":true,"category":"instance","name":"Date#format"},"Element#empty":{"requires":[],"parameters":[],"description":"<p>将本元素的内容清空，并删除本元素及后代元素上的所有事件监听器。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#empty"},"String#endsWith":{"requires":[],"parameters":[{"description":"<p>指定的子串。</p>","type":"string","name":"substring","isOptional":false}],"description":"<p>检查字符串是否以指定的子串结束。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string_extras"],"attributes":[],"fires":[],"deprecated":"","examples":["'abcdefg'.endsWith('a');\r// false"],"isFunction":true,"category":"instance","name":"String#endsWith"},"navigator.isSafari":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 Safari。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isSafari"},"Array#indexOf":{"requires":[],"parameters":[{"description":"<p>指定的元素。</p>","type":"*","name":"searchElement","isOptional":false},{"description":"<p>从指定索引为起始点开始查找，默认为 0。</p><p>如果该值大于数组的长度，则使用数组的长度作为查找起始点。</p><p>如果该值为负数，则表示从数组的末尾开始计算的偏移量，即使用 (fromIndex + 数组的长度) 作为查找起始点，如果这个结果仍为负数，则使用 0 作为查找起始点。</p>","type":"number","name":"fromIndex","isOptional":true}],"description":"<p>返回数组中第一次出现指定的元素的索引。</p>","returns":[{"type":"number","description":"<p>索引值，如果数组中不包含指定的元素，则返回 -1。</p>"}],"type":"number","since":"","see":["http://es5.github.com/#x15.4.4.14","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf"],"attributes":[],"fires":[],"deprecated":"","examples":["[1, 2, 3, 2, 1].indexOf(2);\r// 1\r[1, 2, 3, 2, 1].indexOf(2, 2);\r// 3\r[1, 2, 3, 2, 1].indexOf(2, -3)\r// 3\r[1, 2, 3, 2, 1].indexOf(8)\r// -1"],"isFunction":true,"category":"instance","name":"Array#indexOf"},"Observable#fire":{"requires":[],"parameters":[{"description":"<p>事件类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>在事件对象上附加的数据。</p>","type":"Object","name":"data","isOptional":true}],"description":"<p>触发本对象的某类事件，运行相关的事件监听器。</p>","returns":[{"type":"Object","description":"<p>事件对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Observable#fire"},"navigator.userAgentInfo.version":{"requires":[],"parameters":[],"description":"<p>浏览器的版本号。</p>","returns":[],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.userAgentInfo.version"},"Event#rightButton":{"requires":[],"parameters":[],"description":"<p>事件发生时，鼠标右键是否被按下，仅在鼠标事件对象上有效。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#rightButton"},"Element#setStyle":{"requires":[],"parameters":[{"description":"<p>特性名（支持复合特性），应使用 camel case 格式。</p>","type":"string","name":"propertyName","isOptional":false},{"description":"<p>特性值，若为数字，则为期望长度单位的特性值自动添加长度单位 'px'。</p>","type":"number|string","name":"propertyValue","isOptional":false}],"description":"<p>为本元素设置一条行内样式声明。</p><p>注意：如果设置的是长度值，若长度单位不是 'px' 则不能省略长度单位。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#setStyle"},"document.off":{"requires":[],"parameters":[{"description":"<p>事件名称，细节请参考 Element.prototype.off 的同名参数。</p>","type":"string","name":"name","isOptional":false}],"description":"<p>删除 document 上已添加的事件监听器。</p>","returns":[{"type":"Object","description":"<p>document 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.off"},"navigator.isOpera":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 Opera。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isOpera"},"Function":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Function"},"document.fire":{"requires":[],"parameters":[{"description":"<p>事件类型。</p>","type":"string","name":"type","isOptional":false},{"description":"<p>在事件对象上附加的数据。</p>","type":"Object","name":"data","isOptional":true}],"description":"<p>触发 document 的某类事件。</p>","returns":[{"type":"Object","description":"<p>document 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.fire"},"Object.clone":{"requires":[],"parameters":[{"description":"<p>原始对象。</p>","type":"Object","name":"source","isOptional":false},{"description":"<p>是否进行深克隆。</p>","type":"boolean","name":"recursively","isOptional":true}],"description":"<p>克隆一个对象。</p><p>实例关系和原型链都不会被克隆。</p><p>一些类型的值是无法被克隆的，当尝试克隆它们时，会抛出异常，它们是 (传入 typeOf 方法后返回的值)：</p><ul><li>function</li><li>object.Error</li><li>object.Math</li><li>object.JSON</li><li>object.Arguments</li><li>object.Global</li><li>object.Node</li><li>object.Collection</li></ul><p>如果成功对一个对象进行深克隆，则对克隆对象的任何操作都不会影响原始对象。</p>","returns":[{"type":"Object","description":"<p>克隆对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"Object.clone"},"Element#hasClass":{"requires":[],"parameters":[{"description":"<p>类名，如果要同时指定多个类名，使用逗号将它们分开即可。</p>","type":"string","name":"className","isOptional":false}],"description":"<p>检查本元素是否有指定的类名。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#hasClass"},"Event#wheelUp":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标滚轮是否正在向上滚动，仅在 mousewheel 类型的事件对象上有效。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#wheelUp"},"Element#contains":{"requires":[],"parameters":[{"description":"<p>目标元素。</p>","type":"Element","name":"target","isOptional":false}],"description":"<p>判断本元素是否包含目标元素。</p><p>注意，如果本元素和目标元素一致，本方法也将返回 true。</p>","returns":[{"type":"boolean","description":"<p>判断结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#contains"},"window.$":{"requires":[],"parameters":[],"description":"<p>对 document.$ 的引用。</p><p>在编写应用代码时，可以使用 $ 来代替 document.$。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"window.$"},"Boolean#toJSON":{"requires":[],"parameters":[],"description":"<p>将布尔值转换为 JSON 格式的字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Boolean#toJSON"},"Event#isDefaultPrevented":{"requires":[],"parameters":[],"description":"<p>查询事件的默认行为是否已被阻止。</p>","returns":[{"type":"boolean","description":"<p>查询结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#isDefaultPrevented"},"Element#getLastChild":{"requires":[],"parameters":[],"description":"<p>获取本元素的最后一个子元素。</p>","returns":[{"type":"Element","description":"<p>本元素的最后一个子元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getLastChild"},"Element#getChildren":{"requires":[],"parameters":[],"description":"<p>获取本元素的所有子元素。</p>","returns":[{"type":"Array","description":"<p>包含本元素的所有子元素的数组，数组内各元素的顺序为调用本方法时各元素在文档树中的顺序。</p>"}],"type":"Array","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#getChildren"},"Element#remove":{"requires":[],"parameters":[{"description":"<p>是否保留本元素及后代元素上的所有事件监听器。</p>","type":"boolean","name":"keepListeners","isOptional":true}],"description":"<p>将本元素从文档树中删除。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#remove"},"navigator.isFirefox":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 Firefox。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isFirefox"},"String#dasherize":{"requires":[],"parameters":[],"description":"<p>以 dasherize 的形式重组字符串。</p>","returns":[{"type":"string","description":"<p>重组后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["'foo_bar'.dasherize();\r// 'foo-bar'\r'FooBar'.dasherize();\r// 'foo-bar'"],"isFunction":true,"category":"instance","name":"String#dasherize"},"JSON":{"requires":[],"parameters":[],"description":"<p>JSON 对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"JSON"},"document.on":{"requires":[],"parameters":[{"description":"<p>事件名称，细节请参考 Element.prototype.on 的同名参数。</p>","type":"string","name":"name","isOptional":false},{"description":"<p>监听器，细节请参考 Element.prototype.on 的同名参数。</p>","type":"Function","name":"listener","isOptional":false}],"description":"<p>为 document 添加事件监听器。</p><p>特殊事件：domready</p><ul><li>在文档可用时触发，只能添加监听器，不能删除监听器，因此不能使用标签。</li><li>不会有事件对象作为参数传入监听器。</li><li>如果在此事件触发后添加此类型的监听器，这个新添加的监听器将立即被调用。</li></ul>","returns":[{"type":"Object","description":"<p>document 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.on"},"Element#setData":{"requires":[],"parameters":[{"description":"<p>数据名，必须为 camel case 形式，并且只能包含英文字母。</p>","type":"string","name":"key","isOptional":false},{"description":"<p>数据值，必须为字符串。</p>","type":"string","name":"value","isOptional":false}],"description":"<p>向本元素中保存一条自定义数据。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#setData"},"String#clean":{"requires":[],"parameters":[],"description":"<p>合并字符串中的空白字符，并去掉首尾的空白字符。</p>","returns":[{"type":"string","description":"<p>清理后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["' a b  c   d    e     f      g       '.clean();\r// 'a b c d e f g'"],"isFunction":true,"category":"instance","name":"String#clean"},"Array":{"requires":[],"parameters":[],"description":"<p></p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Array"},"String#repeat":{"requires":[],"parameters":[{"description":"<p>要重复的次数。</p>","type":"number","name":"count","isOptional":false}],"description":"<p>将字符串重复指定的次数。</p>","returns":[{"type":"string","description":"<p>重复指定次数后的字符串。</p>"}],"type":"string","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:string.prototype.repeat"],"attributes":[],"fires":[],"deprecated":"","examples":["'*'.repeat(5);\r// '*****'"],"isFunction":true,"category":"instance","name":"String#repeat"},"Event#middleButton":{"requires":[],"parameters":[],"description":"<p>事件发生时，鼠标中键是否被按下，仅在鼠标事件对象上有效。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#middleButton"},"navigator.isChrome":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 Chrome。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isChrome"},"JSON.stringify":{"requires":[],"parameters":[{"description":"<p>要转换的 ECMAScript 值，通常是 Object 或 Array 类型，也可以是 String、Boolean、Number、Date 类型或者 null。</p>","type":"*","name":"value","isOptional":false},{"description":"<p>用来更改/过滤转换结果的函数或数组。</p><dl><dt>如果是函数，则：</dt><dd><p>该函数将在解析要转换的 ECMAScript 值中每一个键值对之前被调用，传入两个参数 key 和 value，并使用其返回值代替 value 进行转换。<br>如果返回 undefined，则正在处理的这个键值对将被从转换结果中删除。</p><p>该函数第一次被调用（如果要转换的 ECMAScript 值的类型是 String、Boolean、Number、Date 或为 null 时则是唯一一次被调用）时，传入的 key 是空字符串，value 是要转换的 ECMAScript 值。</p><p>该函数被调用时 this 的值为当前传入的 key 和 value 所属的 ECMAScript 对象，可能为 Object 或 Array。</p></dd><dt>如果是数组，则：</dt><dd><p>该数组只能包含字符串，本方法会仅对 key 出现在数组中的部分进行转换。</p></dd></dl>","type":"Function|Array","name":"replacer","isOptional":true},{"description":"<p>为使 JSON 字符串更易读而将其换行，并在每行内容之前加入的前缀。</p><p>如果是字符串，则直接加入这个字符串作为前缀。若字符串的长度超过 10，则仅保留前 10 个字符。</p><p>如果是数字，则加入对应数目的空格符。若数字大于 10，则只使用 10 个空格符。</p><p>如果未指定该值，或者该值为 '' 或小于 1 的数字，则 JSON 字符串不会换行。</p>","type":"string|number","name":"space","isOptional":true}],"description":"<p>将 ECMAScript 值转换为 JSON 格式的字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"JSON.stringify"},"Object.fromQueryString":{"requires":[],"parameters":[{"description":"<p>要转换的查询字符串。</p>","type":"string","name":"string","isOptional":false},{"description":"<p>转换时不使用 decodeURIComponent 解码。</p>","type":"boolean","name":"dontDecode","isOptional":true}],"description":"<p>将一个用于 HTTP 传输的查询字符串转换为对象。</p>","returns":[{"type":"Object","description":"<p>转换后的对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["Object.fromQueryString('c=&d=100&e=Composite%20Value&e=true');\r// {c: '', d: '100', e: ['Composite Value', 'true']}"],"isFunction":true,"category":"static","name":"Object.fromQueryString"},"Element#addClass":{"requires":[],"parameters":[{"description":"<p>类名，如果要同时指定多个类名，使用逗号将它们分开即可。</p>","type":"string","name":"className","isOptional":false}],"description":"<p>为本元素添加指定的类名。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#addClass"},"Request#abort":{"requires":[],"parameters":[],"description":"<p>取消请求。</p><p>仅在一次异步模式的请求正在进行时，调用此方法才有效。</p>","returns":[{"type":"Object","description":"<p>Request 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Request#abort"},"document.loadScript":{"requires":[],"parameters":[{"description":"<p>脚本文件的路径。</p>","type":"string","name":"url","isOptional":false},{"description":"<p>可选参数。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>脚本文件的字符集。</p>","type":"string","name":"options.charset","isOptional":false},{"description":"<p>加载完毕后的回调。</p><p>该函数被调用时 this 的值为加载本脚本时创建的 SCRIPT 元素。</p>","type":"Function","name":"options.onLoad","isOptional":false}],"description":"<p>加载脚本。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.loadScript"},"cookie.getItem":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false}],"description":"<p>从 cookie 中读取一条数据。</p>","returns":[{"type":"string","description":"<p>数据值。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"cookie.getItem"},"document.preloadImages":{"requires":[],"parameters":[{"description":"<p>包含需预加载的图片路径的数组。</p>","type":"Array","name":"urlArray","isOptional":false},{"description":"<p>每个图片加载完毕后的回调。</p><p>该函数被调用时 this 的值为已完成加载的 IMG 元素。</p>","type":"Function","name":"onLoad","isOptional":true}],"description":"<p>预加载图片。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"document.preloadImages"},"String#trim":{"requires":[],"parameters":[],"description":"<p>删除字符串两端的空白符。</p>","returns":[{"type":"string","description":"<p>删除两端的空白符后的字符串。</p>"}],"type":"string","since":"","see":["http://blog.stevenlevithan.com/archives/faster-trim-javascript","http://es5.github.com/#x15.5.4.20"],"attributes":[],"fires":[],"deprecated":"","examples":["'  hello '.trim();\r// 'hello'"],"isFunction":true,"category":"instance","name":"String#trim"},"Animation#stop":{"requires":[],"parameters":[],"description":"<p>停止动画，并将动画的时间点复位至起点。</p><p>调用此方法时，动画中所有的剪辑都将回到起点状态。</p><p>如果当前动画的时间点在起点，则调用此方法无效。</p>","returns":[{"type":"Object","description":"<p>Animation 对象。</p>"}],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Animation#stop"},"Array.isArray":{"requires":[],"parameters":[{"description":"<p>提供的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>检查提供的值是否为数组。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.3.2","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray"],"attributes":[],"fires":[],"deprecated":"","examples":["Array.isArray([]);\r// true"],"isFunction":true,"category":"static","name":"Array.isArray"},"Event#clientX":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在视口中的 X 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#clientX"},"Event#clientY":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在视口中的 Y 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#clientY"},"document.head":{"requires":[],"parameters":[],"description":"<p>获取文档的 HEAD 元素。</p><p>与 document.documentElement 和 document.body 的作用一样，document.head 是获取文档的 HEAD 元素的快捷方式。</p>","returns":[],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["document.documentElement === document.getElementsByTagName('html')[0];\r// true\rdocument.head === document.getElementsByTagName('head')[0];\r// true\rdocument.body === document.getElementsByTagName('body')[0];\r// true"],"isFunction":false,"category":"static","name":"document.head"},"HTMLFormElement":{"requires":[],"parameters":[],"description":"<p>为无 HTMLFormElement 构造函数的浏览器创建 HTMLFormElement 对象，以确保在各浏览器中都可以通过 HTMLFormElement.prototype 为表单元素扩展新特性。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"HTMLFormElement"},"Event#ctrlKey":{"requires":[],"parameters":[],"description":"<p>事件发生时，ctrl 键是否被按下。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#ctrlKey"},"Array#every":{"requires":[],"parameters":[{"description":"<p>用来检查的回调函数。</p><p>回调函数有三个参数：当前元素，当前元素的索引和调用该方法的数组对象。</p><p>回调函数返回 true 表示当前元素通过检查，反之表示未通过检查。</p>","type":"Function","name":"callback","isOptional":false},{"description":"<p>callback 被调用时 this 的值，如果省略或指定为 null，则使用全局对象 window。</p>","type":"Object","name":"thisObject","isOptional":true}],"description":"<p>检查数组中的所有元素是否都符合某个条件。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":["http://es5.github.com/#x15.4.4.16","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every"],"attributes":[],"fires":[],"deprecated":"","examples":["[1, 2, 3].every(function(item) {\r  return item < 5;\r});\r// true"],"isFunction":true,"category":"instance","name":"Array#every"},"navigator.userAgentInfo":{"requires":[],"parameters":[],"description":"<p>从 navigator.userAgent 中提取的常用信息。</p><p>注意：navigator.userAgentInfo 下的三个属性是根据 navigator.userAgent 得到的，仅供参考，不建议作为逻辑判断的依据。</p>","returns":[],"type":"Object","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.userAgentInfo"},"Event#isImmediatePropagationStopped":{"requires":[],"parameters":[],"description":"<p>查询事件的传播是否已被立即阻止。</p>","returns":[{"type":"boolean","description":"<p>查询结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#isImmediatePropagationStopped"},"Event#isPropagationStopped":{"requires":[],"parameters":[],"description":"<p>查询事件的传播是否已被阻止。</p>","returns":[{"type":"boolean","description":"<p>查询结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Event#isPropagationStopped"},"document":{"requires":[],"parameters":[],"description":"<p>扩展 document 对象。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"document"},"Event#shiftKey":{"requires":[],"parameters":[],"description":"<p>事件发生时，shift 键是否被按下。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#shiftKey"},"JSON.parse":{"requires":[],"parameters":[{"description":"<p>要转换的 JSON 格式的字符串。</p>","type":"string","name":"text","isOptional":false},{"description":"<p>用来过滤或更改转换结果的函数。</p><p>该函数将在解析 text 中每一个键值对之后被调用，传入两个参数 key 和 value，并使用其返回值代替 value 作为最终值。<br>如果返回 undefined，则正在处理的这个键值对将被从转换结果中删除。</p><p>该函数最后一次被调用（如果 text 表示的是一个 String、Boolean、Number 类型的值或 null 时则是唯一一次被调用）时，传入的 key 是空字符串，value 是已从 text 转换到 ECMAScript 值的结果。</p><p>该函数被调用时 this 的值为当前传入的 key 和 value 所属的 ECMAScript 对象，可能为 Object 或 Array。</p>","type":"Function","name":"reviver","isOptional":true}],"description":"<p>将 JSON 格式的字符串转换为 ECMAScript 值。</p>","returns":[{"type":"*","description":"<p>转换后的 ECMAScript 值。</p>"}],"type":"*","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"JSON.parse"},"Object.keys":{"requires":[],"parameters":[{"description":"<p>要获取键列表的对象。</p>","type":"Object","name":"object","isOptional":false}],"description":"<p>获取对象的键列表。</p>","returns":[{"type":"Array","description":"<p>对象的键列表。</p>"}],"type":"Array","since":"","see":["http://es5.github.com/#x15.2.3.14","https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys","http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation"],"attributes":[],"fires":[],"deprecated":"","examples":["Object.keys({a: 97, b: 98, c: 99});\r// ['a', 'b', 'c']"],"isFunction":true,"category":"static","name":"Object.keys"},"cookie.removeItem":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false},{"description":"<p>可选参数。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>限定生效的路径，默认为当前路径。</p>","type":"string","name":"options.path","isOptional":false},{"description":"<p>限定生效的域名，默认为当前域名。</p>","type":"string","name":"options.domain","isOptional":false},{"description":"<p>是否仅通过 SSL 连接 (HTTPS) 传输本条数据，默认为否。</p>","type":"boolean","name":"options.secure","isOptional":false}],"description":"<p>从 cookie 中删除一条数据。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"cookie.removeItem"},"Event#metaKey":{"requires":[],"parameters":[],"description":"<p>事件发生时，meta 键是否被按下。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#metaKey"},"Date#toJSON":{"requires":[],"parameters":[],"description":"<p>将日期转换为 JSON 格式的字符串。</p>","returns":[{"type":"string","description":"<p>转换后的字符串。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Date#toJSON"},"Event#pageX":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在页面中的 X 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#pageX"},"Animation":{"requires":[],"parameters":[],"description":"<p>动画。</p><p>所有 Animation 的实例都具备 Observable 特性。</p><p>向一个动画中添加多个剪辑，并调整每个剪辑的 delay，duration，timingFunction 参数，以实现复杂的动画。<br>仅应在动画初始化时（播放之前）添加动画剪辑，不要在开始播放后添加或更改动画剪辑。</p><p>在 step 事件监听器中访问 this.timePoint 可以获得当前帧所处的时间点。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[{"description":"<p>成功调用 play 方法后，正向播放开始前触发。</p>","name":"play"},{"description":"<p>正向播放开始前（渲染整个动画的第一帧之前）触发。</p>","name":"playstart"},{"description":"<p>正向播放结束后（渲染整个动画的最后一帧之后）触发。</p>","name":"playfinish"},{"description":"<p>成功调用 reverse 方法后，倒放开始前触发。</p>","name":"reverse"},{"description":"<p>倒放开始前（渲染整个动画的第一帧之前）触发。</p>","name":"reversestart"},{"description":"<p>倒放结束后（渲染整个动画的最后一帧之后）触发。</p>","name":"reversefinish"},{"description":"<p>渲染动画的每一帧之后触发。</p>","name":"step"},{"description":"<p>成功调用 pause 方法后触发。</p>","name":"pause"},{"description":"<p>成功调用 stop 方法后触发。</p>","name":"stop"}],"deprecated":"","examples":[],"isFunction":true,"category":"constructor","name":"Animation"},"Event#pageY":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在页面中的 Y 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#pageY"},"navigator":{"requires":[],"parameters":[],"description":"<p>扩展 navigator 对象，提供更多关于浏览器的信息。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator"},"Array#contains":{"requires":[],"parameters":[{"description":"<p>指定的元素。</p>","type":"*","name":"element","isOptional":false}],"description":"<p>检查本数组中是否包含指定的元素。</p>","returns":[{"type":"boolean","description":"<p>检查结果。</p>"}],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":["[0, 1, 2, 3, 4].contains(2);\r// true"],"isFunction":true,"category":"instance","name":"Array#contains"},"navigator.isIElt8":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE，且版本小于 8。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIElt8"},"localStorage.getItem":{"requires":[],"parameters":[{"description":"<p>数据名。</p>","type":"string","name":"key","isOptional":false}],"description":"<p>从 localStorage 中读取一条数据。</p>","returns":[{"type":"string","description":"<p>数据值。</p>"}],"type":"string","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"static","name":"localStorage.getItem"},"navigator.isIElt9":{"requires":[],"parameters":[],"description":"<p>浏览器是否为 IE，且版本小于 9。</p>","returns":[],"type":"boolean","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"navigator.isIElt9"},"cookie":{"requires":[],"parameters":[],"description":"<p>提供操作 cookie 的常用方法。</p>","returns":[],"type":"","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"static","name":"cookie"},"Element#highlight":{"requires":[],"parameters":[{"description":"<p>高亮颜色，默认为 'yellow'。</p>","type":"string","name":"color","isOptional":true},{"description":"<p>高亮样式名，默认为 'backgroundColor'。</p>","type":"string","name":"property","isOptional":true},{"description":"<p>动画选项。</p>","type":"Object","name":"options","isOptional":true},{"description":"<p>播放时间，单位是毫秒，默认为 500。</p>","type":"number","name":"options.duration","isOptional":false},{"description":"<p>控速函数名称或表达式，细节请参考 Animation.prototype.addClip 的同名参数，默认为 'easeIn'。</p>","type":"string","name":"options.timingFunction","isOptional":false},{"description":"<p>播放开始时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStart","isOptional":false},{"description":"<p>播放每一帧之后的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onStep","isOptional":false},{"description":"<p>播放完成时的回调。</p><p>该函数被调用时 this 的值为本元素。</p>","type":"Function","name":"options.onFinish","isOptional":false}],"description":"<p>让本元素播放一个高亮动画。</p><p>如果本元素的动画播放列表中已经存在一个 highlight 动画，则停止旧的，播放新的。</p>","returns":[{"type":"Element","description":"<p>本元素。</p>"}],"type":"Element","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":true,"category":"instance","name":"Element#highlight"},"Function#bind":{"requires":[],"parameters":[{"description":"<p>绑定到本函数的 this 的值。</p>","type":"Object","name":"thisObject","isOptional":false},{"description":"<p>绑定到本函数的第一个参数的值。</p>","type":"*","name":"arg1","isOptional":true},{"description":"<p>绑定到本函数的第二个参数的值。</p>","type":"*","name":"arg2","isOptional":true},{"description":"<p>绑定到本函数的第 n 个参数的值。</p>","type":"*","name":"…","isOptional":true}],"description":"<p>生成一个 this 及其参数均被绑定到指定的值的新函数。</p>","returns":[{"type":"Function","description":"<p>绑定后的新函数。</p>"}],"type":"Function","since":"","see":["http://es5.github.com/#x15.3.4.5","https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Function/bind"],"attributes":[],"fires":[],"deprecated":"","examples":["var counter = {\r  symbol: '$',\r  count: function(rate, number) {\r    return this.symbol + rate * number;\r  }\r};\rcounter.count(0.157, 1000);\r// $157\rvar simplifiedCount = counter.count.bind({symbol: '￥'}, 6.362);\rsimplifiedCount(500);\r// ￥3181"],"isFunction":true,"category":"instance","name":"Function#bind"},"Number.toInteger":{"requires":[],"parameters":[{"description":"<p>提供的值。</p>","type":"*","name":"value","isOptional":false}],"description":"<p>将提供的值转化为整数。</p>","returns":[{"type":"number","description":"<p>转化结果。</p>"}],"type":"number","since":"","see":["http://wiki.ecmascript.org/doku.php?id=harmony:number.tointeger"],"attributes":[],"fires":[],"deprecated":"","examples":["Number.toInteger([10.75]);\r// 10\rNumber.toInteger('10px');\r// 0"],"isFunction":true,"category":"static","name":"Number.toInteger"},"Event#screenX":{"requires":[],"parameters":[],"description":"<p>事件发生时鼠标在屏幕上的 X 坐标，仅在鼠标事件对象上有效。</p>","returns":[],"type":"number","since":"","see":[],"attributes":[],"fires":[],"deprecated":"","examples":[],"isFunction":false,"category":"instance","name":"Event#screenX"}};